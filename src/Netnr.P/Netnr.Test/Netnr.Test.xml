<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Netnr.Test</name>
    </assembly>
    <members>
        <member name="T:Netnr.Test.Controllers.CoreController">
            <summary>
            Netnr.Core
            </summary>
        </member>
        <member name="M:Netnr.Test.Controllers.CoreController.CmdTo_1">
            <summary>
            CmdTo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.Test.Controllers.CoreController.CmdTo_2(System.String,System.String)">
            <summary>
            CmdTo
            </summary>
            <param name="args">参数</param>
            <param name="fileName">应用程序</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Test.Controllers.CoreController.SystemStatusTo(System.String)">
            <summary>
            系统状态
            </summary>
            <param name="type">json 或 view</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Test.Controllers.CoreController.ToCalc(System.String,System.String,System.String)">
            <summary>
            加密/解码
            </summary>
            <param name="txt"></param>
            <param name="key"></param>
            <param name="iv"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.Test.Controllers.LoggingController">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Netnr.Test.Controllers.LoggingController.DeleteStorageDir">
            <summary>
            删除存储目录
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.Test.Controllers.LoginController">
            <summary>
            Netnr.Login
            </summary>
        </member>
        <member name="M:Netnr.Test.Controllers.LoginController.LoginClient.Auth(System.String)">
            <summary>
            生成请求链接
            </summary>
            <param name="authType">在防伪参数追加信息（可用于登录、注册、绑定、解绑区分）</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Test.Controllers.LoginController.LoginClient.AuthCallback(Netnr.Login.LoginBase.AuthorizeResult)">
            <summary>
            回调方法
            </summary>
            <param name="authorizeResult">接收授权码、防伪参数</param>
        </member>
        <member name="T:Netnr.Test.Controllers.SharedController">
            <summary>
            Netnr.Shared
            </summary>
        </member>
        <member name="M:Netnr.Test.Controllers.SharedController.To_Ado_SQLite(System.String,System.String)">
            <summary>
            查询数据库
            </summary>
            <param name="conn">连接字符串</param>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Test.Controllers.SharedController.To_UserAgent(System.String,System.Int32)">
            <summary>
            User-Agent
            </summary>
            <param name="ua">User-Agent</param>
            <param name="loop">循环</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Test.Controllers.SharedController.To_Compile">
            <summary>
            动态编译并执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.Test.Controllers.WeChatController">
            <summary>
            Netnr.WeChat
            </summary>
        </member>
        <member name="M:Netnr.Test.Controllers.WeChatController.Index(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            开发者接管
            </summary>
        </member>
        <member name="M:Netnr.Test.Controllers.WeChatController.WeChatExecutor.Execute(Netnr.WeChat.WeChatMessage)">
            <summary>
            说明：带TODO字眼的代码段，需要开发者自行按照自己的业务逻辑实现
            </summary>
            <param name="message"></param>
            <returns>已经打包成xml的用于回复用户的消息包</returns>
        </member>
        <member name="T:Netnr.SharedAdo.DbHelper">
            <summary>
            Db帮助类
            </summary>
            <summary>
            Oracle操作类
            </summary>
            <summary>
            MySQL操作类
            </summary>
            <summary>
            PostgreSQL操作类
            </summary>
            <summary>
            SQLServer操作类
            </summary>
        </member>
        <member name="P:Netnr.SharedAdo.DbHelper.Connection">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="P:Netnr.SharedAdo.DbHelper.Transaction">
            <summary>
            事务
            </summary>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.#ctor(System.Data.Common.DbConnection)">
            <summary>
            构造
            </summary>
            <param name="dbConnection">连接对象</param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlQuery(System.String,System.Data.Common.DbParameter[],System.Func{System.Data.Common.DbCommand,System.Data.Common.DbCommand})">
            <summary>
            查询
            </summary>
            <param name="sql">SQL语句，支持多条</param>
            <param name="parameters">带参</param>
            <param name="func">回调</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlScalar(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecute(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecute(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            执行（批量、事务）
            </summary>
            <param name="listSql">SQL语句</param>
            <param name="sqlBatchSize">脚本分批大小，单位：字节（byte），默认：1024 * 100 = 100KB</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlEmptyTable(System.String,System.Data.Common.DbCommandBuilder)">
            <summary>
            返回空表格
            </summary>
            <param name="table">数据库表名</param>
            <param name="cb">构建对象，取引用符号</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.GetCommand(System.String,System.Data.Common.DbParameter[],System.Int32,System.Data.CommandType)">
            <summary>
            拿到 DbCommand
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <param name="timeout">超时，默认 300 秒</param>
            <param name="commandType">类型</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SafeConn(System.Action)">
            <summary>
            连接包装
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SafeConn``1(System.Func{``0})">
            <summary>
            连接包装
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopyOracle(System.Data.DataTable,System.String,System.Action{Oracle.ManagedDataAccess.Client.OracleBulkCopy})">
            <summary>
            表批量写入
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <param name="bulkCopy">设置表复制对象</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchOracle(System.Data.DataTable,System.String,System.Action{Oracle.ManagedDataAccess.Client.OracleDataAdapter,System.Data.DataTable},System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlPrintOracle(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL语句，返回打印信息
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns>返回打印信息</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopyMySQL(System.Data.DataTable,System.String,System.Action{MySqlConnector.MySqlBulkCopy},System.Boolean)">
            <summary>
            表批量写入
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <param name="bulkCopy">设置表复制对象</param>
            <param name="openTransaction">开启事务，默认不开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchMySQL(System.Data.DataTable,System.String,System.Action{MySqlConnector.MySqlDataAdapter,System.Data.DataTable},System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlPrintMySQL(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL语句，返回打印信息
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns>返回打印信息</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopyPostgreSQL(System.Data.DataTable,System.String)">
            <summary>
            表批量写入
            https://www.npgsql.org/doc/copy.html
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchPostgreSQL(System.Data.DataTable,System.String,System.Action{Npgsql.NpgsqlDataAdapter,System.Data.DataTable},System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopySQLServer(System.Data.DataTable,System.String,System.Action{Microsoft.Data.SqlClient.SqlBulkCopy})">
            <summary>
            表批量写入
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <param name="bulkCopy">设置表复制对象</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchSQLServer(System.Data.DataTable,System.String,System.Action{Microsoft.Data.SqlClient.SqlDataAdapter,System.Data.DataTable},System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表</param>
            <param name="table">数据库表名</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlPrintSQLServer(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL语句，返回打印信息
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns>返回打印信息</returns>
        </member>
        <member name="T:Netnr.SharedAdo.DbHelperExtend">
            <summary>
            扩展
            </summary>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelperExtend.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            查询返回数据集
            </summary>
            <param name="dbCommand"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedApp.BuildTo">
            <summary>
            构建
            </summary>
        </member>
        <member name="M:Netnr.SharedApp.BuildTo.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            构造
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="M:Netnr.SharedApp.BuildTo.Html``1">
            <summary>
            根据控制器构建静态页面
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedApp.QuoteTo">
            <summary>
            资源引用
            </summary>
        </member>
        <member name="M:Netnr.SharedApp.QuoteTo.Html(System.String)">
            <summary>
            得到html字符串
            </summary>
            <param name="quotes">引用项，逗号分割，按顺序</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedApp.ClientTo">
            <summary>
            客户端信息
            </summary>
        </member>
        <member name="M:Netnr.SharedApp.ClientTo.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            构造
            </summary>
            <param name="content"></param>
        </member>
        <member name="P:Netnr.SharedApp.ClientTo.IPv4">
            <summary>
            IPv4
            </summary>
        </member>
        <member name="P:Netnr.SharedApp.ClientTo.IPv6">
            <summary>
            IPv6
            </summary>
        </member>
        <member name="P:Netnr.SharedApp.ClientTo.UserAgent">
            <summary>
            UA
            </summary>
        </member>
        <member name="P:Netnr.SharedApp.ClientTo.Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="P:Netnr.SharedApp.ClientTo.Referer">
            <summary>
            引荐
            </summary>
        </member>
        <member name="T:Netnr.SharedApp.DownTo">
            <summary>
            下载
            </summary>
        </member>
        <member name="M:Netnr.SharedApp.DownTo.#ctor(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
            构造
            </summary>
            <param name="httpResponse"></param>
        </member>
        <member name="M:Netnr.SharedApp.DownTo.Stream(System.String,System.String)">
            <summary>
            流的方式下载
            </summary>
        </member>
        <member name="M:Netnr.SharedApp.DownTo.Stream(System.Byte[],System.String)">
            <summary>
            流的方式下载
            </summary>
            <param name="bytes"></param>
            <param name="fileName">下载文件名</param>
        </member>
        <member name="T:Netnr.SharedCompile.CompileTo">
            <summary>
            Using Roslyn in .NET Core
            
            Install-Package Microsoft.CodeAnalysis
            Install-Package System.Runtime.Loader
            </summary>
        </member>
        <member name="F:Netnr.SharedCompile.CompileTo.encoding">
            <summary>
            编码
            </summary>
        </member>
        <member name="M:Netnr.SharedCompile.CompileTo.Executing(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            动态编译并执行
            </summary>
            <param name="code">代码</param>
            <param name="listUsing">引用，逗号分隔</param>
            <param name="className">类名</param>
            <param name="methodName">方法</param>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitAidTo">
            <summary>
            DataKit 辅助
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitAidTo.GetTypeDB(System.String)">
            <summary>
            类型转换
            </summary>
            <param name="typeDB"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitAidTo.SqlQuote(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            SQL引用符号
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="KeyWord">关键字</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitAidTo.SqlCmdBuild(System.Nullable{Netnr.SharedEnum.TypeDB})">
            <summary>
            构建
            </summary>
            <param name="tdb"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitAidTo.SqlConn(Netnr.SharedEnum.TypeDB,System.String)">
            <summary>
            构建数据库连接
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitAidTo.SqlMappingCsharp(Netnr.SharedEnum.TypeDB,System.String,System.String)">
            <summary>
            数据库表映射C#
            </summary>
            <param name="tdb"></param>
            <param name="table"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitAidTo.SqlScriptHistory(Netnr.SharedEnum.TypeDB,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            执行脚本历史记录
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
            <param name="search"></param>
            <param name="beginTime"></param>
            <param name="endTime"></param>
        </member>
        <member name="T:Netnr.SharedDataKit.IDataKitTo">
            <summary>
            获取数据库各类信息的接口定义
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.IDataKitTo.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.IDataKitTo.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取表列信息
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.IDataKitTo.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.IDataKitTo.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.IDataKitTo.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.IDataKitTo.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:Netnr.SharedDataKit.SqlMappingCsharpVM.ColumnName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.SqlMappingCsharpVM.DataTypeName">
            <summary>
            数据类型（C#）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.SqlMappingCsharpVM.DbType">
            <summary>
            数据类型（DB）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.SqlMappingCsharpVM.MaxLength">
            <summary>
            最大长度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.SqlMappingCsharpVM.AllowDBNull">
            <summary>
            允许为Null
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.SqlMappingCsharpVM.Ordinal">
            <summary>
            字段排序
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitMySQLTo">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitMySQLTo.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitMySQLTo.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.DataBaseName">
            <summary>
            获取数据库名称
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitMySQLTo.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitOracleTo">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitOracleTo.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitOracleTo.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitOracleTo.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitPostgreSQLTo">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitPostgreSQLTo.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitPostgreSQLTo.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitPostgreSQLTo.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitSQLiteTo">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitSQLiteTo.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitSQLiteTo.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLiteTo.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitSQLServerTo">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitSQLServerTo.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKitSQLServerTo.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitSQLServerTo.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitTo">
            <summary>
            DataKit调用
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.ForTypeDBSetConn(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            赋值
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.GetTable(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            获取所有表名及注释
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.GetColumn(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String)">
            <summary>
            获取所有列
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="filterTableName">过滤表名，英文逗号分隔，为空时默认所有表</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.SetTableComment(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.SetColumnComment(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.GetData(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            查询数据
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.GetDEI(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            查询数据库环境信息
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitTo.TableToDEI(System.Data.DataTable)">
            <summary>
            表转DEI实体
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DEIVM">
            <summary>
            数据库环境信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiVersion">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiCompile">
            <summary>
            编译
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiDirInstall">
            <summary>
            安装目录
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiDirData">
            <summary>
            数据库目录
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiDirTemp">
            <summary>
            临时目录
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiEngine">
            <summary>
            引擎
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiCharSet">
            <summary>
            字符集
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiTimeZone">
            <summary>
            时区
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiDateTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiMaxConn">
            <summary>
            最大连接数
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiCurrConn">
            <summary>
            当前连接数
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiTimeout">
            <summary>
            连接超时（秒）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiIgnoreCase">
            <summary>
            忽略大小写（不区分大小写）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DEIVM.DeiSystem">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TableColumnVM">
            <summary>
            表列信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.TableComment">
            <summary>
            表注释
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.FieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.DataTypeLength">
            <summary>
            数据类型及长度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.DataLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.DataScale">
            <summary>
            数据精度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.FieldOrder">
            <summary>
            字段排序
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.PrimaryKey">
            <summary>
            主键（YES：是主键）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.AutoAdd">
            <summary>
            自增（YES：是自增）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.NotNull">
            <summary>
            为空（YES：不为空）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableColumnVM.FieldComment">
            <summary>
            字段注释
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TableNameVM">
            <summary>
            表信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableNameVM.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableNameVM.TableComment">
            <summary>
            表注释
            </summary>
        </member>
        <member name="T:Netnr.SharedFast.GlobalTo">
            <summary>
            全局
            </summary>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.TDB">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetConn">
            <summary>
            根据数据库类型获取连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.Configuration">
            <summary>
            全局配置
            </summary>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.HostEnvironment">
            <summary>
            托管环境信息
            </summary>
        </member>
        <member name="P:Netnr.SharedFast.GlobalTo.ContentRootPath">
            <summary>
            内部访问（项目根路径）
            </summary>
        </member>
        <member name="P:Netnr.SharedFast.GlobalTo.WebRootPath">
            <summary>
            web外部访问（wwwroot）
            </summary>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetValue(System.String)">
            <summary>
            获取AppsettingsJson的值
            </summary>
            <param name="key">键路径，如：ConnectionStrings:SQLServer</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetValue``1(System.String)">
            <summary>
            获取AppsettingsJson的值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键路径</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.ConvertValue``1(System.String)">
            <summary>
            值类型转换
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.ConvertValue(System.Type,System.String)">
            <summary>
            值类型转换
            </summary>
            <param name="type">类型</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.EncodingReg">
            <summary>
            编码注册
            </summary>
        </member>
        <member name="T:Netnr.SharedPageVM">
            <summary>
            分页视图
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Rows">
            <summary>
            数据行
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Temp">
            <summary>
            临时数据
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Other">
            <summary>
            其它数据
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Pag">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="F:Netnr.SharedPageVM.Route">
            <summary>
            路由 /home/index
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.QueryString">
            <summary>
            url 传参 k=1
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.PageKeyName">
            <summary>
            分页 参数名 默认 page
            </summary>
        </member>
        <member name="M:Netnr.SharedPageVM.Page(System.Int32)">
            <summary>
            生成页的地址
            </summary>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedPaginationVM">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageSize">
            <summary>
            页量
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.Total">
            <summary>
            总数量
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageTotal">
            <summary>
            总页数
            </summary>
        </member>
        <member name="T:Netnr.SharedResultVM">
            <summary>
            通用请求方法返回对象
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Code">
            <summary>
            错误码，200 表示成功，-1 表示异常，其它自定义建议从 1 开始累加
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Data">
            <summary>
            主体数据
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.UseTime">
            <summary>
            用时，毫秒
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.PartTime">
            <summary>
            片段耗时，毫秒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(Netnr.SharedEnum.RTag)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="tag">快捷标签枚举</param>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="isyes"></param>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(System.Exception,System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="ex"></param>
            <param name="showException">显示异常信息，默认true</param>
        </member>
        <member name="M:Netnr.SharedResultVM.Try(System.Func{Netnr.SharedResultVM,Netnr.SharedResultVM})">
            <summary>
            通用的异常处理
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedEnum">
            <summary>
            共享枚举
            </summary>
        </member>
        <member name="T:Netnr.SharedEnum.TypeDB">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.InMemory">
            <summary>
            Memory
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.SQLite">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.MySQL">
            <summary>
            MySQL
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.SQLServer">
            <summary>
            SQLServer
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.PostgreSQL">
            <summary>
            PostgreSQL
            </summary>
        </member>
        <member name="T:Netnr.SharedEnum.RTag">
            <summary>
            返回结果常用类型
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.fail">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.unauthorized">
            <summary>
            未授权
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.refuse">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.exist">
            <summary>
            存在
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.lack">
            <summary>
            缺省
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="T:Netnr.SharedDbContext.FactoryTo">
            <summary>
            数据库工厂
            </summary>
        </member>
        <member name="F:Netnr.SharedDbContext.FactoryTo.logFactory">
            <summary>
            应用程序不为每个上下文实例创建新的ILoggerFactory实例非常重要。这样做会导致内存泄漏和性能下降
            </summary>
        </member>
        <member name="M:Netnr.SharedDbContext.FactoryTo.CreateDbContextOptionsBuilder``1(Netnr.SharedEnum.TypeDB,System.String,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            创建 DbContextOptionsBuilder
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="connnectionString">连接字符串</param>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.FactoryTo.ConnnectionEncryptOrDecrypt(System.String,System.String,System.Int32)">
            <summary>
            连接字符串加密/解密
            </summary>
            <param name="conn">连接字符串</param>
            <param name="pwd">密码</param>
            <param name="ed">1加密 2解密</param>
        </member>
        <member name="T:Netnr.SharedDbContext.ExtendTo">
            <summary>
            EF上下文执行SQL扩展
            </summary>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.SqlQuery(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL返回表
            </summary>
            <param name="context"></param>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.SqlExecute(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL返回受影响行数
            </summary>
            <param name="context"></param>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.SqlExecute(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            事务执行批量SQL，可自定义SQL分批大小
            </summary>
            <param name="context"></param>
            <param name="listSql">批量脚本</param>
            <param name="sqlBatchSize">脚本分批大小，单位：字节（byte），默认：1024 * 100 = 100KB</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.Ros(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            引用对象符号
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedLogging.LoggingModel">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogId">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogApp">
            <summary>
            应用
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogUid">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogNickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogAction">
            <summary>
            动作
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogContent">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogUrl">
            <summary>
            链接
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogReferer">
            <summary>
            引荐
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogIp">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogArea">
            <summary>
            IP归属地
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogUserAgent">
            <summary>
            客户端信息
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogBrowserName">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogSystemName">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogGroup">
            <summary>
            分组（1：默认；2：爬虫）
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogLevel">
            <summary>
            级别（F： Fatal；E：Error；W：Warn；I：Info；D：Debug；A：All）
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogCreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogRemark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogSpare1">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogSpare2">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingModel.LogSpare3">
            <summary>
            备用
            </summary>
        </member>
        <member name="T:Netnr.SharedLogging.LoggingResultVM">
            <summary>
            查询返回
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingResultVM.Total">
            <summary>
            总条数（仅对分页查询时有效）
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingResultVM.Lost">
            <summary>
            丢失的库（附加库有上限会丢失数据库）
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingResultVM.Data">
            <summary>
            数据体
            </summary>
        </member>
        <member name="T:Netnr.SharedLogging.LoggingTo">
            <summary>
            日志
            </summary>
        </member>
        <member name="T:Netnr.SharedLogging.LoggingTo.DBPartType">
            <summary>
            数据库文件分割类型（由于附加数据库有限制，默认 OptionsDbMaxAttach 个，所以一次最多能查询 OptionsDbMaxAttach + 1 个库）
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.DBPartType.None">
            <summary>
            不分
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.DBPartType.Year">
            <summary>
            按年分割，如：2020/log.db，最大查询 OptionsDbMaxAttach 年
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.DBPartType.Month">
            <summary>
            按月分割，如：2020/04/log.db，最大查询 OptionsDbMaxAttach 个月
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.DBPartType.Day">
            <summary>
            按日分割，如：2020/04/16/log.db，最大查询 OptionsDbMaxAttach 天
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.OptionsDbRoot">
            <summary>
            数据库目录
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.OptionsDbFileName">
            <summary>
            数据库文件名
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.OptionsDbTableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.OptionsDbIpFile">
            <summary>
            IP区域库文件
            更新地址：
            https://github.com/lionsoul2014/ip2region
            https://gitee.com/lionsoul/ip2region
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.OptionsDbPart">
            <summary>
            数据库文件分割，默认按年
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.OptionsDbMaxAttach">
            <summary>
            数据库附加限制，默认 max 30
            </summary>
        </member>
        <member name="P:Netnr.SharedLogging.LoggingTo.CurrentCacheLog">
            <summary>
            当前缓存日志
            </summary>
        </member>
        <member name="F:Netnr.SharedLogging.LoggingTo.WriteMark">
            <summary>
            写入标记
            </summary>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.PathToConn(System.String)">
            <summary>
            路径转连接字符串
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.GetDbPartFormat">
            <summary>
            获取数据库分片路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.CreateDatabase(System.String)">
            <summary>
            创建数据库
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.Add(System.Collections.Generic.IEnumerable{Netnr.SharedLogging.LoggingModel})">
            <summary>
            新增（队列+锁）
            </summary>
            <param name="logs">日志实体</param>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.Add(Netnr.SharedLogging.LoggingModel)">
            <summary>
            新增
            </summary>
            <param name="log">日志实体</param>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.AddNow(System.Collections.Generic.IEnumerable{Netnr.SharedLogging.LoggingModel},System.Boolean)">
            <summary>
            新增（实时）
            </summary>
            <param name="logs">日志实体</param>
            <param name="autoMakeUp">自动补齐信息，默认true</param>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.MakeUpLogs(System.Collections.Generic.IEnumerable{Netnr.SharedLogging.LoggingModel}@)">
            <summary>
            补齐日志信息
            </summary>
            <param name="logs"></param>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.InsertAll(System.String,System.Collections.Generic.IEnumerable{Netnr.SharedLogging.LoggingModel})">
            <summary>
            新增SQL
            </summary>
            <param name="path"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.UserAgentParse(System.String,System.String@,System.String@,System.Boolean@)">
            <summary>
            解析 User-Agent
            </summary>
            <param name="ua"></param>
            <param name="browserName"></param>
            <param name="systemName"></param>
            <param name="isBot"></param>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.GetDbPath(System.DateTime,System.DateTime)">
            <summary>
            根据时间获取存储的路径
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.GetSqlForQuery(System.DateTime,System.DateTime,Netnr.SharedAdo.DbHelper@,System.Int32@,System.Collections.Generic.List{System.String}@)">
            <summary>
            拿到最终查询语句
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
            <param name="db">数据库对象</param>
            <param name="lost">丢失数据库文件</param>
            <param name="listPreSql">前置SQL</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.ListWhereJoin(System.Collections.Generic.List{System.Collections.Generic.List{System.String}})">
            <summary>
            条件拼接
            </summary>
            <param name="listWhere">条件（列名、 关系符、值1、值2）</param>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.Query(System.DateTime,System.DateTime,System.Int32,System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{System.String}})">
            <summary>
            查询
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="listWhere">条件：键、关系符、值1、值2</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.StatsPVUV(System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{System.String}})">
            <summary>
            统计PV/UV
            </summary>
            <param name="type">类型（0：今天，-1：昨天，-7：最近7天，-30：最近30天）</param>
            <param name="listWhere">条件：键、关系符、值1、值2</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedLogging.LoggingTo.StatsTop(System.Int32,System.String,System.Collections.Generic.List{System.Collections.Generic.List{System.String}})">
            <summary>
            统计属性排行
            </summary>
            <param name="type">类型（0：今天，-1：昨天，-7：最近7天，-30：最近30天）</param>
            <param name="field">字段列</param>
            <param name="listWhere">条件：键、关系符、值1、值2</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedUserAgent.UserAgentTo">
            <summary>
            客户端 UA 解析
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.BrowserName">
            <summary>
            浏览器名称
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.BrowserType">
            <summary>
            浏览器类型
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.BrowserVersion">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.SystemName">
            <summary>
            操作系统名称
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.SystemShortName">
            <summary>
            操作系统简称
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.SystemVersion">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.SystemPlatform">
            <summary>
            操作系统平台
            </summary>
        </member>
        <member name="P:Netnr.SharedUserAgent.UserAgentTo.IsBot">
            <summary>
            是爬虫
            </summary>
        </member>
        <member name="M:Netnr.SharedUserAgent.UserAgentTo.#ctor(System.String)">
            <summary>
            解析 User-Agent
            </summary>
            <param name="ua">User-Agent</param>
        </member>
    </members>
</doc>
