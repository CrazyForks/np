<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Netnr.Logging</name>
    </assembly>
    <members>
        <member name="T:Netnr.Logging.LoggingModel">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogId">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogApp">
            <summary>
            应用
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogUid">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogNickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogAction">
            <summary>
            动作
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogContent">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogUrl">
            <summary>
            链接
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogReferer">
            <summary>
            引荐
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogIp">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogArea">
            <summary>
            IP归属地
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogUserAgent">
            <summary>
            客户端信息
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogBrowserName">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogSystemName">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogGroup">
            <summary>
            分组（1：默认；2：爬虫）
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogLevel">
            <summary>
            级别（F： Fatal；E：Error；W：Warn；I：Info；D：Debug；A：All）
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogCreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogRemark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogSpare1">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogSpare2">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingModel.LogSpare3">
            <summary>
            备用
            </summary>
        </member>
        <member name="T:Netnr.Logging.LoggingResultVM">
            <summary>
            查询返回
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingResultVM.Data">
            <summary>
            数据体
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingResultVM.Total">
            <summary>
            总条数（仅对分页查询时有效）
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingResultVM.Lost">
            <summary>
            丢失的库（附加库有上限会丢失数据库）
            </summary>
        </member>
        <member name="T:Netnr.Logging.LoggingTo">
            <summary>
            日志
            </summary>
        </member>
        <member name="T:Netnr.Logging.LoggingTo.DBPartType">
            <summary>
            数据库文件分割类型（由于附加数据库有限制，默认 DbMaxAttach 个，所以一次最多能查询 DbMaxAttach + 1 个库）
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DBPartType.None">
            <summary>
            不分
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DBPartType.Year">
            <summary>
            按年分割，如：2020/log.db，最大查询 DbMaxAttach 年
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DBPartType.Month">
            <summary>
            按月分割，如：2020/04/log.db，最大查询 DbMaxAttach 个月
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DBPartType.Day">
            <summary>
            按日分割，如：2020/04/16/log.db，最大查询 DbMaxAttach 天
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DbRoot">
            <summary>
            数据库目录
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DbFileName">
            <summary>
            数据库文件名
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DbTableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DbIpFile">
            <summary>
            IP区域库文件
            更新地址：
            https://github.com/lionsoul2014/ip2region
            https://gitee.com/lionsoul/ip2region
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DbPart">
            <summary>
            数据库文件分割
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.DbMaxAttach">
            <summary>
            数据库附加限制
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingTo.DbPath">
            <summary>
            路径
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.CacheWriteCount">
            <summary>
            分批写入满足的条件：缓存的日志数量
            </summary>
        </member>
        <member name="F:Netnr.Logging.LoggingTo.CacheWriteSecond">
            <summary>
            分批写入满足的条件：缓存的时长，单位秒
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingTo.CurrentCacheLog">
            <summary>
            当前缓存日志
            </summary>
        </member>
        <member name="P:Netnr.Logging.LoggingTo.CurrentCacheWriteTime">
            <summary>
            当前缓存写入时间
            </summary>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.PathToConn(System.String)">
            <summary>
            路径转连接字符串
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.GetDbPartFormat">
            <summary>
            获取数据库分片路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.Add(System.Collections.Generic.IEnumerable{Netnr.Logging.LoggingModel})">
            <summary>
            新增
            </summary>
            <param name="logs">日志实体</param>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.Add(Netnr.Logging.LoggingModel)">
            <summary>
            新增
            </summary>
            <param name="log">日志实体</param>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.AddNow(System.Collections.Generic.IEnumerable{Netnr.Logging.LoggingModel},System.Boolean)">
            <summary>
            新增
            </summary>
            <param name="logs">日志实体</param>
            <param name="autoMakeUp">自动补齐信息，默认true</param>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.MakeUpLogs(System.Collections.Generic.IEnumerable{Netnr.Logging.LoggingModel}@)">
            <summary>
            补齐日志信息
            </summary>
            <param name="logs"></param>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.InsertAll(System.String,System.Collections.Generic.IEnumerable{Netnr.Logging.LoggingModel})">
            <summary>
            新增SQL
            </summary>
            <param name="path"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.UserAgentParse(System.String,System.String@,System.String@,System.Boolean@)">
            <summary>
            解析 User-Agent
            </summary>
            <param name="ua"></param>
            <param name="browserName"></param>
            <param name="systemName"></param>
            <param name="isBot"></param>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.GetDbPath(System.DateTime,System.DateTime)">
            <summary>
            根据时间获取存储的路径
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.GetSqlForQuery(System.DateTime,System.DateTime,Netnr.Data.SQLite.SQLiteHelper@,System.Int32@,System.Collections.Generic.List{System.String}@)">
            <summary>
            拿到最终查询语句
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
            <param name="db">数据库对象</param>
            <param name="lost">丢失数据库文件</param>
            <param name="listPreSql">前置SQL</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.DicWhereJoin(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            条件拼接
            </summary>
            <param name="dicWhere">条件（列名：值）</param>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.Query(System.DateTime,System.DateTime,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            查询
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="dicWhere">条件：键=值</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.StatsPVUV(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            统计PV/UV
            </summary>
            <param name="type">类型（0：今天，-1：昨天，-7：最近7天，-30：最近30天）</param>
            <param name="dicWhere">条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Logging.LoggingTo.StatsTop(System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            统计属性排行
            </summary>
            <param name="type">类型（0：今天，-1：昨天，-7：最近7天，-30：最近30天）</param>
            <param name="field">字段列</param>
            <param name="dicWhere">条件</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.Logging.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Netnr.Logging.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Netnr.Logging.Properties.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Netnr.Logging.Properties.Resources.empty">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
    </members>
</doc>
