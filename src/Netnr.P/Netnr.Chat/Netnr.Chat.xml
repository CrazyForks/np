<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Netnr.Chat</name>
    </assembly>
    <members>
        <member name="T:Netnr.Chat.Application.ChatContextService">
            <summary>
            Chat上下文
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ChatContextService.OnlineUser1">
            <summary>
            系统用户，用户ID 对应 用户信息
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ChatContextService.OnlineUser2">
            <summary>
            在线用户，用户ID 对应 用户信息
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ChatContextService.OnlineGroup1">
            <summary>
            组，组ID 对应 组信息
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ChatContextService.UserMessage1">
            <summary>
            用户消息记录，接收用户ID 对应 发送消息
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ChatContextService.GroupMessage1">
            <summary>
            组消息记录，接收组ID 对应 发送消息
            </summary>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.HandleMessageToUsers(Netnr.Chat.Application.ViewModel.ChatMessageVM,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.SignalR.IHubClients)">
            <summary>
            处理用户消息发送
            </summary>
            <param name="cm">发送消息</param>
            <param name="hc">上下文</param>
            <param name="Clients">连接客户端对象</param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.HandleUserMessageReceipt(Netnr.Chat.Application.ViewModel.ChatMessageVM,Microsoft.AspNetCore.Http.HttpContext,Netnr.Chat.Data.ContextBase)">
            <summary>
            处理用户消息回执
            </summary>
            <param name="cm">发送消息</param>
            <param name="hc">上下文</param>
            <param name="db">数据库</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.HandleMessageToGroup(Netnr.Chat.Application.ViewModel.ChatMessageVM,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.SignalR.IHubClients)">
            <summary>
            处理组消息发送
            </summary>
            <param name="cm">发送消息</param>
            <param name="hc">上下文</param>
            <param name="Clients">连接客户端对象</param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.HandelGroupNew(Netnr.Chat.Application.ViewModel.ChatGroupVM,Microsoft.AspNetCore.SignalR.IGroupManager,Netnr.Chat.Data.ContextBase)">
            <summary>
            处理新建组
            </summary>
            <param name="cg">组信息</param>
            <param name="Groups"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.GetChatUserInfo(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取登录用户信息
            </summary>
            <param name="hc">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.GetChatUserInfo(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            获取登录用户信息
            </summary>
            <param name="cc">连接对象</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.UserOnline(Netnr.Chat.Application.ViewModel.ChatUserVM)">
            <summary>
            用户上线
            </summary>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.UserOffline(Netnr.Chat.Application.ViewModel.ChatUserVM)">
            <summary>
            用户下线
            </summary>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.NewMessageId">
            <summary>
            新消息ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.WriteMessageForUser(Netnr.Chat.Application.ViewModel.ChatMessageVM)">
            <summary>
            推送消息转存储消息
            </summary>
            <param name="cm"></param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.WriteMessageForUserReverse(System.Collections.Generic.List{Netnr.Chat.Domain.NChatMessageToUser})">
            <summary>
            推送消息转存储消息（反转）
            </summary>
            <param name="listCmo"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.WriteMessageForGroup(Netnr.Chat.Application.ViewModel.ChatMessageVM)">
            <summary>
            推送消息转存储消息
            </summary>
            <param name="cm"></param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.WriteMessageForGroupReverse(System.Collections.Generic.List{Netnr.Chat.Domain.NChatMessageToGroup})">
            <summary>
            推送消息转存储消息（反转）
            </summary>
            <param name="listCmo"></param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.WriteMessageToCache(System.Collections.Generic.List{Netnr.Chat.Domain.NChatMessageToUser})">
            <summary>
            写入用户消息到缓存
            </summary>
            <param name="cms"></param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.WriteMessageToCache(System.Collections.Generic.List{Netnr.Chat.Domain.NChatMessageToGroup})">
            <summary>
            写入组消息到缓存
            </summary>
            <param name="cms"></param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.SaveUserMessage(Netnr.Chat.Data.ContextBase,System.Int32)">
            <summary>
            保存用户消息
            </summary>
            <param name="db"></param>
            <param name="second">发送消息已超过分钟数，默认5分钟，0为全部写入</param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.SaveGroupMessage(Netnr.Chat.Data.ContextBase,System.Int32)">
            <summary>
            保存组消息
            </summary>
            <param name="db"></param>
            <param name="second">发送消息已超过分钟数，默认5分钟，0为全部写入</param>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.GetUnreadUserMessageCount(Netnr.Chat.Data.ContextBase,System.String)">
            <summary>
            获取未读用户消息数量
            </summary>
            <param name="db"></param>
            <param name="UserId">接收用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.GetUnreadGroupMessageCount(Netnr.Chat.Data.ContextBase,System.String)">
            <summary>
            获取未读组消息数量
            </summary>
            <param name="db"></param>
            <param name="UserId">接收用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.GetHistoryUserMessage(Netnr.Chat.Data.ContextBase,System.String,System.Int32,System.Int32)">
            <summary>
            获取用户历史消息
            </summary>
            <param name="db"></param>
            <param name="UserId">用户ID</param>
            <param name="page">页码</param>
            <param name="size">页量</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.GetHistoryGroupMessage(Netnr.Chat.Data.ContextBase,System.String,System.Int32,System.Int32)">
            <summary>
            获取组历史消息
            </summary>
            <param name="db"></param>
            <param name="GroupId">组ID</param>
            <param name="page">页码</param>
            <param name="size">页量</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.FindUsers(System.Collections.Generic.List{System.String})">
            <summary>
            根据用户ID找到用户信息
            </summary>
            <param name="UserId">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.FindGroup(System.Collections.Generic.List{System.String})">
            <summary>
            根据组ID找到组信息
            </summary>
            <param name="GroupId">组ID</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatContextService.UserIsOnline(System.String)">
            <summary>
            用户是否在线
            </summary>
            <param name="UserId">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatHubService.OnConnectedAsync">
            <summary>
            连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Application.ChatHubService.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开（非调试模式）
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.Chat.Application.ViewModel.ChatConnectionVM">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatConnectionVM.ConnId">
            <summary>
            连接ID
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatConnectionVM.UserAgent">
            <summary>
            用户代理
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatConnectionVM.ConnSign">
            <summary>
            连接标识
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatConnectionVM.UserDevice">
            <summary>
            设备，1：PC，2：Mobile
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.Voice">
            <summary>
            语音
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.Video">
            <summary>
            视频
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.Link">
            <summary>
            链接
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.EventNewGroup">
            <summary>
            新建组
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.EventJoinGroup">
            <summary>
            加入组
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.EventLeaveGroup">
            <summary>
            离开组
            </summary>
        </member>
        <member name="F:Netnr.Chat.Application.ViewModel.MessageType.EventDelGroup">
            <summary>
            删除组
            </summary>
        </member>
        <member name="T:Netnr.Chat.Application.ViewModel.ChatGroupVM">
            <summary>
            通讯组
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatGroupVM.GroupId">
            <summary>
            组ID
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatGroupVM.GroupName">
            <summary>
            组名
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatGroupVM.GroupClassify">
            <summary>
            组归类
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatGroupVM.GroupUser">
            <summary>
            组用户
            </summary>
        </member>
        <member name="T:Netnr.Chat.Application.ViewModel.ChatLoginVM">
            <summary>
            登录授权
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatLoginVM.GuestId">
            <summary>
            来宾ID（来宾用户再次获取Token需要）
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatLoginVM.UserName">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatLoginVM.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatLoginVM.Device">
            <summary>
            设备
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatLoginVM.Sign">
            <summary>
            标识
            </summary>
        </member>
        <member name="T:Netnr.Chat.Application.ViewModel.ChatMessageVM">
            <summary>
            推送消息
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmFromId">
            <summary>
            发送者用户ID
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmFromConn">
            <summary>
            发送者连接信息
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmId">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmContent">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmWhich">
            <summary>
            推送哪种
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmToIds">
            <summary>
            接收者用户/组
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatMessageVM.CmStatus">
            <summary>
            消息状态（-1：撤回，1：待推送，2：已推送，3：已接收，4：已读）
            </summary>
        </member>
        <member name="T:Netnr.Chat.Application.ViewModel.ChatUserVM">
            <summary>
            通讯用户
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatUserVM.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatUserVM.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatUserVM.UserPhoto">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Netnr.Chat.Application.ViewModel.ChatUserVM.Conns">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="T:Netnr.Chat.Controllers.AccountController">
            <summary>
            账号
            </summary>
        </member>
        <member name="M:Netnr.Chat.Controllers.AccountController.Token(Netnr.Chat.Application.ViewModel.ChatLoginVM)">
            <summary>
            授权获取token
            </summary>
            <param name="chatLogin">登录信息</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.Chat.Controllers.ChatController">
            <summary>
            接口
            </summary>
        </member>
        <member name="M:Netnr.Chat.Controllers.ChatController.GetOnlineAllUser">
            <summary>
            获取所有在线用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Controllers.ChatController.PushMessageToUsers(Netnr.Chat.Application.ViewModel.ChatMessageVM)">
            <summary>
            推送消息到用户
            </summary>
            <param name="cm">推送消息</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Controllers.ChatController.UserMessageReceipt(Netnr.Chat.Application.ViewModel.ChatMessageVM)">
            <summary>
            用户消息回执
            </summary>
            <param name="cm">推送消息</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Controllers.ChatController.PushMessageToGroup(Netnr.Chat.Application.ViewModel.ChatMessageVM)">
            <summary>
            推送消息到组
            </summary>
            <param name="cm">推送消息</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Controllers.ChatController.GetUnreadUserMessageCount(System.String)">
            <summary>
            获取未读用户消息数量
            </summary>
            <param name="UserId">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Controllers.ChatController.GetUnreadGroupMessageCount(System.String)">
            <summary>
            获取未读组消息数量
            </summary>
            <param name="UserId">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Controllers.ChatController.GroupNew(Netnr.Chat.Application.ViewModel.ChatGroupVM)">
            <summary>
            新建组
            </summary>
            <param name="cg">组信息</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.Chat.Data.ContextBaseFactory">
            <summary>
            ContextBase 连接
            </summary>
        </member>
        <member name="M:Netnr.Chat.Data.ContextBaseFactory.CreateDbContextOptionsBuilder(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            创建 DbContextOptionsBuilder
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Chat.Data.ContextBaseFactory.CreateDbContext">
            <summary>
            创建 新的数据库上下文
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedAdo.DbHelper">
            <summary>
            Db帮助类
            </summary>
        </member>
        <member name="P:Netnr.SharedAdo.DbHelper.Connection">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="P:Netnr.SharedAdo.DbHelper.Transaction">
            <summary>
            事务
            </summary>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.#ctor(System.Data.Common.DbConnection)">
            <summary>
            构造
            </summary>
            <param name="dbConnection">连接对象</param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlQuery(System.String,System.Data.Common.DbParameter[],System.Action{System.Data.Common.DbCommand})">
            <summary>
            查询
            </summary>
            <param name="sql">SQL语句，支持多条</param>
            <param name="parameters">带参</param>
            <param name="action">回调</param>
            <returns>返回数据集</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlScalar(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecute(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecute(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            执行（批量、事务）
            </summary>
            <param name="listSql">SQL语句</param>
            <param name="sqlBatchSize">脚本分批大小，单位：字节（byte），默认：1024 * 100 = 100KB</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.GetCommand(System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            拿到 DbCommand
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <param name="commandType">类型</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SafeConn(System.Action)">
            <summary>
            连接包装
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SafeConn``1(System.Func{``0})">
            <summary>
            连接包装
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedAdo.DbHelperExtend">
            <summary>
            扩展
            </summary>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelperExtend.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            查询返回数据集
            </summary>
            <param name="dbCommand"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedFast.GlobalTo">
            <summary>
            全局
            </summary>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.TDB">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetConn">
            <summary>
            根据数据库类型获取连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.Configuration">
            <summary>
            全局配置
            </summary>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.HostEnvironment">
            <summary>
            托管环境信息
            </summary>
        </member>
        <member name="P:Netnr.SharedFast.GlobalTo.ContentRootPath">
            <summary>
            内部访问（项目根路径）
            </summary>
        </member>
        <member name="P:Netnr.SharedFast.GlobalTo.WebRootPath">
            <summary>
            web外部访问（wwwroot）
            </summary>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetValue(System.String)">
            <summary>
            获取AppsettingsJson的值
            </summary>
            <param name="key">键路径，如：ConnectionStrings:SQLServer</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetValue``1(System.String)">
            <summary>
            获取AppsettingsJson的值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键路径</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.ConvertValue``1(System.String)">
            <summary>
            值类型转换
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.ConvertValue(System.Type,System.String)">
            <summary>
            值类型转换
            </summary>
            <param name="type">类型</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedPageVM">
            <summary>
            分页视图
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Rows">
            <summary>
            数据行
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Temp">
            <summary>
            临时数据
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Other">
            <summary>
            其它数据
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Pag">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="F:Netnr.SharedPageVM.Route">
            <summary>
            路由 /home/index
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.QueryString">
            <summary>
            url 传参 k=1
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.PageKeyName">
            <summary>
            分页 参数名 默认 page
            </summary>
        </member>
        <member name="M:Netnr.SharedPageVM.Page(System.Int32)">
            <summary>
            生成页的地址
            </summary>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedPaginationVM">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageSize">
            <summary>
            页量
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.Total">
            <summary>
            总数量
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageTotal">
            <summary>
            总页数
            </summary>
        </member>
        <member name="T:Netnr.SharedResultVM">
            <summary>
            通用请求方法返回对象
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Code">
            <summary>
            错误码，200 表示成功，-1 表示异常，其它自定义建议从 1 开始累加
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Data">
            <summary>
            主体数据
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.UseTime">
            <summary>
            用时，毫秒
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.PartTime">
            <summary>
            片段耗时，毫秒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(Netnr.SharedEnum.RTag)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="tag">快捷标签枚举</param>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="isyes"></param>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(System.Exception,System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="ex"></param>
            <param name="showException">显示异常信息，默认true</param>
        </member>
        <member name="T:Netnr.SharedEnum">
            <summary>
            共享枚举
            </summary>
        </member>
        <member name="T:Netnr.SharedEnum.TypeDB">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.InMemory">
            <summary>
            Memory
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.SQLite">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.MySQL">
            <summary>
            MySQL
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.SQLServer">
            <summary>
            SQLServer
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.PostgreSQL">
            <summary>
            PostgreSQL
            </summary>
        </member>
        <member name="T:Netnr.SharedEnum.RTag">
            <summary>
            返回结果常用类型
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.fail">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.unauthorized">
            <summary>
            未授权
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.refuse">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.exist">
            <summary>
            存在
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.lack">
            <summary>
            缺省
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="T:Netnr.SharedDbContext.FactoryTo">
            <summary>
            数据库工厂
            </summary>
        </member>
        <member name="F:Netnr.SharedDbContext.FactoryTo.logFactory">
            <summary>
            应用程序不为每个上下文实例创建新的ILoggerFactory实例非常重要。这样做会导致内存泄漏和性能下降
            </summary>
        </member>
        <member name="M:Netnr.SharedDbContext.FactoryTo.CreateDbContextOptionsBuilder``1(Netnr.SharedEnum.TypeDB,System.String,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            创建 DbContextOptionsBuilder
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="connnectionString">连接字符串</param>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.FactoryTo.ConnnectionEncryptOrDecrypt(System.String,System.String,System.Int32)">
            <summary>
            连接字符串加密/解密
            </summary>
            <param name="conn">连接字符串</param>
            <param name="pwd">密码</param>
            <param name="ed">1加密 2解密</param>
        </member>
        <member name="T:Netnr.SharedDbContext.ExtendTo">
            <summary>
            EF上下文执行SQL扩展
            </summary>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.SqlQuery(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL返回表
            </summary>
            <param name="context"></param>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.SqlExecute(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL返回受影响行数
            </summary>
            <param name="context"></param>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.SqlExecute(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            事务执行批量SQL，可自定义SQL分批大小
            </summary>
            <param name="context"></param>
            <param name="listSql">批量脚本</param>
            <param name="sqlBatchSize">脚本分批大小，单位：字节（byte），默认：1024 * 100 = 100KB</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDbContext.ExtendTo.Ros(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            引用对象符号
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
    </members>
</doc>
