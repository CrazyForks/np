@model PageVM
@{
    var uw = Model.Temp as UserWriting;
    var tt = JArray.Parse(uw.Spare1);
    ViewData["Title"] = uw.UwTitle;

    bool laud = ViewData["uca1"]?.ToString() == "yes";
    bool mark = ViewData["uca2"]?.ToString() == "yes";

    var avatarUrl = AppTo.GetValue("Common:Gravatar");
}

<input class="nrg-hid-write-id" type="hidden" value="@uw.UwId" />
<input class="nrg-hid-user-id" type="hidden" value="@uw.Uid" />

<div class="@QuoteTo.PanelClass2">

    <!--Ê†áÈ¢ò-->
    <div class="row">
        <div class="col-12 mb-2">
            <a class="fs-4 text-break" href="/home/list/@uw.UwId">@uw.UwTitle</a>
            <partial name="~/Views/Home/_PartialTagItem.cshtml" model="@uw.Spare1" />
        </div>
    </div>

    <!--Ê†áÈ¢ò‰ø°ÊÅØ-->
    <div class="row">
        <div class="col mb-2 opacity-75">
            <a class="me-2 small" href='/user/id/@uw.Uid'>@uw.Spare2</a>
            <small class="me-2 d-none d-sm-inline-block" title="ÂàõÂª∫‰∫é">@ParsingTo.FormatTimeAgo(uw.UwCreateTime.Value)</small>
            @if (uw.UwCreateTime.Value.Date != uw.UwUpdateTime.Value.Date)
            {
                <small class="me-2 d-none d-sm-inline-block" title="Êõ¥Êñ∞‰∫é">@ParsingTo.FormatTimeAgo(uw.UwUpdateTime.Value)</small>
            }
            <small class="me-2" title="ÈòÖËØªÈáè">üëÅ@ParsingTo.FormatCount(uw.UwReadNum.Value)</small>
            <small class="me-2" title="ÂõûÂ§çÊï∞">üí¨@uw.UwReplyNum.Value</small>
        </div>
        <div class="col-auto d-none d-sm-inline">
            <div class="btn-group">
                @if (mark)
                {
                    <button title="ÂèñÊ∂àÊî∂Ëóè" class="nrg-btn-mark btn btn-sm btn-outline-info">‚ù§</button>
                }
                else
                {
                    <button title="Êî∂Ëóè" class="nrg-btn-mark btn btn-sm btn-outline-info">‚ù§</button>
                }
                <button class="btn btn-sm btn-outline-info">@uw.UwMark</button>
            </div>
            <div class="btn-group">
                @if (laud)
                {
                    <button title="ÂèñÊ∂àÁÇπËµû" class="nrg-btn-laud btn btn-sm btn-outline-info">üëç</button>
                }
                else
                {
                    <button title="ÁÇπËµû" class="nrg-btn-laud btn btn-sm btn-outline-info">üëç</button>
                }
                <button class="btn btn-sm btn-outline-info">@uw.UwLaud</button>
            </div>
        </div>
        <div class="col-12"><hr /></div>
    </div>

    <!--ÂÜÖÂÆπ-->
    <div class="row">
        <div class="col-12">
            @if (uw.UwStatus != 1)
            {
                <h2 class="alert alert-warning text-center">ÂèóÈôêÂà∂ÁöÑÊñáÁ´†</h2>
            }
        </div>

        <div class="col-12 mb-5">
            <div class="markdown-body lh-base">
                @Html.Raw(uw.UwContent)
            </div>
        </div>
    </div>

    <!--ÂõûÂ§ç-->
    @if (Model.Pag.Total > 0)
    {
        var listRp = Model.Rows as List<UserReply>;
        int lv = (Model.Pag.PageNumber - 1) * Model.Pag.PageSize;

        <div class="row">
            <div class="col-12 fs-4">
                <span class="float-end">Á¨¨ @Model.Pag.PageNumber È°µ</span>@Model.Pag.Total ‰∏™ÂõûÂ§ç
                <hr />
            </div>
        </div>

        @foreach (var item in listRp)
        {
            lv += 1;
            var gra = avatarUrl + CalcTo.MD5(item.UrAnonymousMail ?? "") + "?r=pg";

            <div class="row" id="no_@lv">
                <div class="col-auto">
                    @if (item.Uid == 0)
                    {
                        <img class="rounded" width="40" src="@gra" alt="Â§¥ÂÉè" onerror="this.src = '/favicon.svg'; this.onerror = null;">
                    }
                    else
                    {
                        var avatarPath = "/favicon.svg";
                        if (!string.IsNullOrWhiteSpace(item.Spare2))
                        {
                            avatarPath = CommonService.StaticResourceLink("AvatarPath", item.Spare2);
                        }

                        <img class="rounded" width="40" src="@avatarPath" alt="Â§¥ÂÉè" onerror="this.src = '/favicon.svg'; this.onerror = null;">
                    }
                </div>

                <div class="col" id="r_@item.UrId">
                    @if (item.UrStatus == 1)
                    {
                        if (item.Uid == 0)
                        {
                            <a class="small" href="@item.UrAnonymousLink">@item.UrAnonymousName</a>
                            <span class="badge bg-secondary me-2">Guest</span>
                        }
                        else
                        {
                            <a class="me-2 small" href='/user/id/@item.Uid'>@item.Spare1</a>
                        }
                        <small class="me-2 d-none d-sm-inline-block opacity-75" title="ÂàõÂª∫‰∫é">@ParsingTo.FormatTimeAgo(item.UrCreateTime.Value)</small>
                        <a href="#no_@lv" class="float-end">#@lv</a>

                        <div class="markdown-body mt-2">@Html.Raw(item.UrContent)</div>
                    }
                    else
                    {
                        <small class="me-2 d-none d-sm-inline-block opacity-75" title="ÂàõÂª∫‰∫é">@ParsingTo.FormatTimeAgo(item.UrCreateTime.Value)</small>
                        <a href="#no_@lv" class="float-end">#@lv</a>

                        <div class="mt-2">
                            <em class="badge bg-dark">Block</em>
                        </div>
                    }
                </div>

                <div class="col-12">
                    <hr />
                </div>
            </div>
        }

        <partial name="_PartialPaging" />
    }

    @if (ViewContext.HttpContext.User.Identity.IsAuthenticated && AppTo.GetValue<bool?>("DisableDatabaseWrite") != true)
    {
        <div class="row mt-5">
            <!--ÂõûÂ§çÂ∏ñÂ≠ê-->
            <div class="col-md-12">
                <h4>ÂõûÂ§ç<button class="nrg-btn-preview btn btn-sm btn-outline-success ms-2">È¢ÑËßà</button></h4>
                <textarea class="nrg-editor form-control mb-3" rows="5" placeholder="ÊîØÊåÅ Markdown ËØ≠Ê≥ï"></textarea>
                <div class="nrg-preview mb-3"></div>
                <button class="nrg-btn-reply btn btn-warning">ÂõûÂ§ç</button>
            </div>
        </div>
    }

</div>