<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Netnr.Fast</name>
    </assembly>
    <members>
        <member name="T:Netnr.Fast.ParsingTo">
            <summary>
            解析
            </summary>
        </member>
        <member name="M:Netnr.Fast.ParsingTo.IsMail(System.String)">
            <summary>
            是邮件地址
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Fast.ParsingTo.IsLinkPath(System.String)">
            <summary>
            是合法链接路径（数字、字母、下划线）；可为多级路径，如：abc/xyz ；为空时返回不合法
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.Fast.ParsingTo.JsSafeJoin(System.String)">
            <summary>
            JS安全拼接
            </summary>
            <param name="txt">内容</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.Fast.PathTo">
            <summary>
            路径
            </summary>
        </member>
        <member name="M:Netnr.Fast.PathTo.Combine(System.String[])">
            <summary>
            路径结合，默认 / 拼接
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.Fast.QueryableTo">
            <summary>
            查询支持处理
            </summary>
        </member>
        <member name="M:Netnr.Fast.QueryableTo.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.String)">
            <summary>
            排序
            </summary>
            <param name="query"></param>
            <param name="sorts">排序字段，支持多个，逗号分割</param>
            <param name="orders">排序类型，支持多个，逗号分割</param>
        </member>
        <member name="T:ActionResultVM">
            <summary>
            通用请求方法返回对象
            </summary>
        </member>
        <member name="M:ActionResultVM.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ActionResultVM.Code">
            <summary>
            错误码，200 表示成功，-1 表示异常，其它自定义建议从 1 开始累加
            </summary>
        </member>
        <member name="P:ActionResultVM.Msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:ActionResultVM.Data">
            <summary>
            主体数据
            </summary>
        </member>
        <member name="P:ActionResultVM.UseTime">
            <summary>
            用时，毫秒
            </summary>
        </member>
        <member name="M:ActionResultVM.Set(ARTag)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="tag">快捷标签枚举</param>
        </member>
        <member name="M:ActionResultVM.Set(System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="isyes"></param>
        </member>
        <member name="M:ActionResultVM.Set(System.Exception,System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="ex"></param>
            <param name="appendCatch">追加错误消息，默认true</param>
        </member>
        <member name="T:ARTag">
            <summary>
            快捷标签枚举
            </summary>
        </member>
        <member name="F:ARTag.success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:ARTag.fail">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:ARTag.error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:ARTag.unauthorized">
            <summary>
            未授权
            </summary>
        </member>
        <member name="F:ARTag.refuse">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="F:ARTag.exist">
            <summary>
            存在
            </summary>
        </member>
        <member name="F:ARTag.invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:ARTag.lack">
            <summary>
            缺省
            </summary>
        </member>
        <member name="F:ARTag.exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="T:TypeDB">
            <summary>
            数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL，5：InMemory）
            </summary>
        </member>
        <member name="F:TypeDB.MySQL">
            <summary>
            MySQL
            </summary>
        </member>
        <member name="F:TypeDB.SQLite">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="F:TypeDB.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:TypeDB.SQLServer">
            <summary>
            SQLServer
            </summary>
        </member>
        <member name="F:TypeDB.PostgreSQL">
            <summary>
            PostgreSQL
            </summary>
        </member>
        <member name="F:TypeDB.InMemory">
            <summary>
            内存
            </summary>
        </member>
        <member name="T:PageVM">
            <summary>
            分页视图
            </summary>
        </member>
        <member name="P:PageVM.Rows">
            <summary>
            数据行
            </summary>
        </member>
        <member name="P:PageVM.Temp">
            <summary>
            临时数据
            </summary>
        </member>
        <member name="P:PageVM.Other">
            <summary>
            其它数据
            </summary>
        </member>
        <member name="P:PageVM.Pag">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="F:PageVM.Route">
            <summary>
            路由 /home/index
            </summary>
        </member>
        <member name="P:PageVM.QueryString">
            <summary>
            url 传参 k=1
            </summary>
        </member>
        <member name="P:PageVM.PageKeyName">
            <summary>
            分页 参数名 默认 page
            </summary>
        </member>
        <member name="M:PageVM.Page(System.Int32)">
            <summary>
            生成页的地址
            </summary>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="T:PaginationVM">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:PaginationVM.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:PaginationVM.PageSize">
            <summary>
            页量
            </summary>
        </member>
        <member name="P:PaginationVM.Total">
            <summary>
            总数量
            </summary>
        </member>
        <member name="P:PaginationVM.PageTotal">
            <summary>
            总页数
            </summary>
        </member>
        <member name="T:QueryDataInputVM">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="P:QueryDataInputVM.HandleType">
            <summary>
            处理类型，可选：query、export
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Uri">
            <summary>
            请求标识
            </summary>
        </member>
        <member name="P:QueryDataInputVM.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Wheres">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pagination">
            <summary>
            是否启用分页 1分页
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Page">
            <summary>
            页码 默认 1
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Rows">
            <summary>
            页量 默认 30
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Sort">
            <summary>
            排序列名
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Order">
            <summary>
            排序方式 默认 asc
            </summary>
        </member>
        <member name="P:QueryDataInputVM.SortOrderJoin">
            <summary>
            排序拼接
            </summary>
        </member>
        <member name="P:QueryDataInputVM.ColumnsExists">
            <summary>
            是否查询列信息 1不查询
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pe1">
            <summary>
            拓展参数 
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pe2">
            <summary>
            拓展参数 
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pe3">
            <summary>
            拓展参数 
            </summary>
        </member>
        <member name="T:QueryDataOutputVM">
            <summary>
            输出信息
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Total">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Table">
            <summary>
            数据，data转换表，忽略序列化
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Columns">
            <summary>
            列标题
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Or1">
            <summary>
            拓展信息 
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Or2">
            <summary>
            拓展信息
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Or3">
            <summary>
            拓展信息 
            </summary>
        </member>
        <member name="T:TreeNodeVM">
            <summary>
            Tree JSON 节点
            推荐所有的JSON输出用此实体，保证一致性，即页面接收的JSON全是这种格式，方便维护。
            如果不够用，自己灵活追加。
            </summary>
        </member>
        <member name="P:TreeNodeVM.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:TreeNodeVM.Pid">
            <summary>
            父ID
            </summary>
        </member>
        <member name="P:TreeNodeVM.Text">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:TreeNodeVM.Ext1">
            <summary>
            拓展
            </summary>
        </member>
        <member name="P:TreeNodeVM.Ext2">
            <summary>
            拓展
            </summary>
        </member>
        <member name="P:TreeNodeVM.Ext3">
            <summary>
            拓展
            </summary>
        </member>
        <member name="P:TreeNodeVM.Spare1">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:TreeNodeVM.Spare2">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:TreeNodeVM.Spare3">
            <summary>
            备用
            </summary>
        </member>
        <member name="T:ValueTextVM">
            <summary>
            键值对，下拉列表等
            </summary>
        </member>
        <member name="P:ValueTextVM.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:ValueTextVM.Text">
            <summary>
            文本
            </summary>
        </member>
    </members>
</doc>
