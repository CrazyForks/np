<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Netnr.ResponseFramework.Application</name>
    </assembly>
    <members>
        <member name="T:Netnr.ResponseFramework.Application.CommonService">
            <summary>
            公共、常用方法
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.CommonService.DicSqlRelation">
            <summary>
            数据库查询条件关系符
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QueryJoin``1(System.Linq.IQueryable{``0},QueryDataInputVM,Netnr.ResponseFramework.Data.ContextBase,QueryDataOutputVM@)">
            <summary>
            查询拼接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="ivm"></param>
            <param name="db"></param>
            <param name="ovm"></param>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QueryWhere``1(System.Linq.IQueryable{``0},QueryDataInputVM)">
            <summary>
            查询条件（IQueryable）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="ivm"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QueryWhere``1(System.Collections.Generic.IEnumerable{``0},QueryDataInputVM)">
            <summary>
            查询条件（IEnumerable,仅支持部分）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="ivm"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.ToDataTableForString``1(System.Collections.Generic.List{``0})">
            <summary>
            实体转表，类型为字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.CommonService.GlobalCacheKey">
            <summary>
            全局缓存KEY
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.CommonService.GlobalCacheKey.SysMenu">
            <summary>
            菜单缓存KEY
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.CommonService.GlobalCacheKey.SysRole">
            <summary>
            角色缓存KEY
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.CommonService.GlobalCacheKey.SysButton">
            <summary>
            按钮缓存KEY
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.GlobalCacheRmove">
            <summary>
            清空全局缓存
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QuerySysTableConfigList(System.Linq.Expressions.Expression{System.Func{Netnr.ResponseFramework.Domain.SysTableConfig,System.Boolean}})">
            <summary>
            查询配置信息
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QuerySysMenuList(System.Func{Netnr.ResponseFramework.Domain.SysMenu,System.Boolean},System.Boolean)">
            <summary>
            查询菜单
            </summary>
            <param name="predicate"></param>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QuerySysButtonList(System.Func{Netnr.ResponseFramework.Domain.SysButton,System.Boolean},System.Boolean)">
            <summary>
            查询按钮
            </summary>
            <param name="predicate"></param>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QuerySysRoleEntity(System.Func{Netnr.ResponseFramework.Domain.SysRole,System.Boolean},System.Boolean)">
            <summary>
            查询角色信息
            </summary>
            <param name="predicate"></param>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.CommonService.QueryMenuIsAuth(System.String,System.String)">
            <summary>
            查询配置的菜单是否有权限访问（仅针对配置的菜单）
            </summary>
            <param name="roleId">角色ID</param>
            <param name="url">链接</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.ExportService">
            <summary>
            导出辅助
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.ModelsMapping(QueryDataInputVM,QueryDataOutputVM)">
            <summary>
            数据实体映射
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CellFormat(System.String,System.String,System.String,System.Data.DataRow)">
            <summary>
            单元格格式化
            </summary>
            <param name="tableName">表名</param>
            <param name="field">字段名</param>
            <param name="value">单元格值</param>
            <param name="dr">当前行</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.ExportService.CellMapping">
            <summary>
            映射
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.CellMapping.Mck">
            <summary>
            缓存前缀
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.CellMapping.Mce">
            <summary>
            缓存过期时间（单位：秒）
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CellMapping.KeyValueMap(System.String,System.String)">
            <summary>
            字典映射转换
            </summary>
            <param name="kv">格式：1:未生成,2:已生成</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CellMapping.Kvs01(System.String)">
            <summary>
            字典格式化
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CellMapping.Kvs02(System.String)">
            <summary>
            字典格式化
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CellMapping.Kvs03(System.String)">
            <summary>
            字典格式化
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CellMapping.Kvs04(System.String)">
            <summary>
            字典格式化
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CellMapping.DateTimeFormat(System.String,System.String)">
            <summary>
            时间格式化
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.ExcelDraw(System.String,QueryDataInputVM)">
            <summary>
            操作已经生成的Excel
            </summary>
            <param name="fullPath"></param>
            <param name="ivm"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.ExportService.StyleType">
            <summary>
            单元格公共样式枚举
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.normal">
            <summary>
            正常，默认
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.headCenter">
            <summary>
            头部居中
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.headLeft">
            <summary>
            头部居左
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.whiteGreen">
            <summary>
            白色字体，绿色背景
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.whiteOrange">
            <summary>
            白色字体，橙色背景
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.blue">
            <summary>
            蓝色字体
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.green">
            <summary>
            绿色字体
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.blankGray">
            <summary>
            黑色字体，灰色背景
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.bold">
            <summary>
            加粗
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.ExportService.StyleType.headNoBorder">
            <summary>
            头部无边框
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.ExportService.CreateCellStyle(NPOI.SS.UserModel.IWorkbook,Netnr.ResponseFramework.Application.ExportService.StyleType)">
            <summary>
            定义单元格常用到样式
            </summary>
            <param name="wb"></param>
            <param name="st"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.TaskService">
            <summary>
            任务
            帮助文档：https://github.com/fluentscheduler/FluentScheduler
            </summary>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.TaskService.Reg">
            <summary>
            任务注册
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.TaskService.Reg.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.TaskService.ResetDataBaseJob">
            <summary>
            重置数据库
            </summary>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.TaskService.ClearTmpJob">
            <summary>
            清理临时目录
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.TaskService.ClearTmp">
            <summary>
            清理临时目录
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.TaskService.DatabaseAsJson">
            <summary>
            - 数据库数据存储为JSON（备份数据）
            - 根据JSON反序列化导入（重置数据）
            </summary>
        </member>
        <member name="F:Netnr.ResponseFramework.Application.TaskService.DatabaseAsJson.fullJsonData">
            <summary>
            JSON存储路径
            </summary>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.TaskService.DatabaseAsJson.Tables(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            获取所有表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.TaskService.DatabaseAsJson.WriteToJson(System.Boolean)">
            <summary>
            写入JSON文件
            </summary>
            <param name="CoverJson">写入JSON文件，默认 false</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.ResponseFramework.Application.TaskService.DatabaseAsJson.ReadToJson(System.Boolean)">
            <summary>
            读取JSON文件
            </summary>
            <param name="isClear">是否清理表，默认清理</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM">
            <summary>
            表单组件参数项
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.ViewName">
            <summary>
            渲染视图名称，默认Default
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.TableName">
            <summary>
            表配置表名（虚表）
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.PanelTitle">
            <summary>
            多面板选项卡标题（有两个区域或以上时，英文逗号分隔）
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.InvoiceTitle">
            <summary>
            单据标题
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.ModalSize">
            <summary>
            模态框大小 1小 2中 3大
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.MsClass">
            <summary>
            模态框大小转换样式名
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.Index">
            <summary>
            表单ID后缀，单页面多表单，需要累加
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.InvokeFormVM.Data">
            <summary>
            输出的数据
            </summary>
        </member>
        <member name="T:Netnr.ResponseFramework.Application.ViewModel.LoginUserVM">
            <summary>
            登录用户信息
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.LoginUserVM.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.LoginUserVM.UserName">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.LoginUserVM.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Netnr.ResponseFramework.Application.ViewModel.LoginUserVM.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.Applications.DataKitMySQLService">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitMySQLService.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitMySQLService.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.DataBaseName">
            <summary>
            获取数据库名称
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitMySQLService.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.Applications.DataKitOracleService">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitOracleService.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitOracleService.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitOracleService.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitPostgreSQLService.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.Applications.DataKitSQLiteService">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitSQLiteService.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitSQLiteService.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLiteService.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.Applications.DataKitSQLServerService">
            <summary>
            实现接口
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitSQLServerService.connectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.Applications.DataKitSQLServerService.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="conn">连接字符串</param>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.GetTableSQL">
            <summary>
            获取所有表信息的SQL脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.GetColumnSQL(System.String)">
            <summary>
            获取所有列信息的SQL脚本
            </summary>
            <param name="sqlWhere">SQL条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.SetTableCommentSQL(System.String,System.String)">
            <summary>
            设置表注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.SetColumnCommentSQL(System.String,System.String,System.String)">
            <summary>
            设置列注释的SQL脚本
            </summary>
            <param name="dataTableName">表名</param>
            <param name="dataColumnName">列名</param>
            <param name="comment">注释内容</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取所有列
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitSQLServerService.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.Applications.DataKitService">
            <summary>
            DataKit调用
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.ForTypeDBSetConn(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            赋值
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.GetTable(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            获取所有表名及注释
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.GetColumn(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String)">
            <summary>
            获取所有列
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="filterTableName">过滤表名，英文逗号分隔，为空时默认所有表</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.SetTableComment(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.SetColumnComment(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.GetData(System.Nullable{Netnr.SharedEnum.TypeDB},System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            查询数据
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.GetDEI(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            查询数据库环境信息
            </summary>
            <param name="tdb">数据库类型（0：MySQL，1：SQLite，2：Oracle，3：SQLServer，4：PostgreSQL）</param>
            <param name="conn">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.DataKitService.SHA128ToLong(System.String)">
            <summary>
            SHA1 加密 为 long
            </summary>
            <param name="str">内容</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.Applications.IDataKitService">
            <summary>
            获取数据库各类信息的接口定义
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.IDataKitService.GetTable">
            <summary>
            获取所有表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.IDataKitService.GetColumn(System.Collections.Generic.List{System.String})">
            <summary>
            获取表列信息
            </summary>
            <param name="listTableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.IDataKitService.SetTableComment(System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="TableName">表名</param>
            <param name="TableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.IDataKitService.SetColumnComment(System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="TableName">表名</param>
            <param name="FieldName">列名</param>
            <param name="FieldComment">列注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.IDataKitService.GetData(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            查询数据
            </summary>
            <param name="TableName">表名</param>
            <param name="page">页码</param>
            <param name="rows">页量</param>
            <param name="sort">排序字段</param>
            <param name="order">排序方式</param>
            <param name="listFieldName">查询列，默认为 *</param>
            <param name="whereSql">条件</param>
            <param name="total">返回总条数</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.Applications.IDataKitService.GetDEI">
            <summary>
            查询数据库环境信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.Models.DkDEI">
            <summary>
            数据库环境信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiVersion">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiCompile">
            <summary>
            编译
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiDirInstall">
            <summary>
            安装目录
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiDirData">
            <summary>
            数据库目录
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiEngine">
            <summary>
            引擎
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiCharSet">
            <summary>
            字符集
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiTimeZone">
            <summary>
            时区
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiDateTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiMaxConn">
            <summary>
            最大连接数
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiCurrConn">
            <summary>
            当前连接数
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiTimeout">
            <summary>
            连接超时（秒）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiIgnoreCase">
            <summary>
            忽略大小写（不区分大小写）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkDEI.DeiSystem">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.Models.DkTableColumn">
            <summary>
            表列信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.TableComment">
            <summary>
            表注释
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.FieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.DataTypeLength">
            <summary>
            数据类型及长度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.DataLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.DataScale">
            <summary>
            数据精度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.FieldOrder">
            <summary>
            字段排序
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.PrimaryKey">
            <summary>
            主键（YES：是主键）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.AutoAdd">
            <summary>
            自增（YES：是自增）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.NotNull">
            <summary>
            为空（YES：不为空）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableColumn.FieldComment">
            <summary>
            字段注释
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.Models.DkTableName">
            <summary>
            表信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableName.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.Models.DkTableName.TableComment">
            <summary>
            表注释
            </summary>
        </member>
        <member name="T:Netnr.SharedNpoi.NpoiTo">
            <summary>
            NPOI操作Excel
            </summary>
        </member>
        <member name="M:Netnr.SharedNpoi.NpoiTo.DataTableToExcel(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            DataTable生成Excel
            </summary>
            <param name="dt">数据表</param>
            <param name="fullPathName">物理路径 + 文件名称 + 格式</param>
            <param name="isAutoSizeColumn">是否自适应列宽，默认否，开启自适应列宽需要成倍的时间</param>
            <returns>返回生成状态</returns>
        </member>
        <member name="M:Netnr.SharedNpoi.NpoiTo.DataTableToExcel(System.Collections.Generic.Dictionary{System.String,System.Data.DataTable},System.String,System.Boolean)">
            <summary>
            导出多个工作簿
            </summary>
            <param name="dicSheet">工作簿名：数据表</param>
            <param name="fullPathName">物理路径 + 文件名称 + 格式</param>
            <param name="isAutoSizeColumn">是否自适应列宽，默认否，开启自适应列宽需要成倍的时间</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedNpoi.NpoiTo.ExcelToDataTable(NPOI.SS.UserModel.IWorkbook,System.Int32,System.String,System.Int32)">
            <summary>
            读取Excel为DataTable
            </summary>
            <param name="workbook"></param>
            <param name="iSheetIndex">工作薄索引</param>
            <param name="extName">文件格式后缀</param>
            <param name="skipRow">跳过指定行开始读取，默认0</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedNpoi.NpoiTo.ExcelToDataTable(System.String,System.Int32,System.Int32)">
            <summary>
            读取Excel为DataTable
            </summary>
            <param name="fullPathName">Excel文件目录地址</param>
            <param name="iSheetIndex">Excel sheet index</param>
            <param name="skipRow">跳过指定行开始读取，默认0</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedNpoi.NpoiTo.ExcelToDataTable(System.IO.Stream,System.Int32,System.String,System.Int32)">
            <summary>
            读取Excel为DataTable
            </summary>
            <param name="s">流</param>
            <param name="iSheetIndex">工作薄索引</param>
            <param name="extName">文件格式后缀</param>
            <param name="skipRow">跳过指定行开始读取，默认0</param>
            <returns></returns>
        </member>
        <member name="T:QueryDataInputVM">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="P:QueryDataInputVM.HandleType">
            <summary>
            处理类型，可选：query、export
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Uri">
            <summary>
            请求标识
            </summary>
        </member>
        <member name="P:QueryDataInputVM.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Wheres">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pagination">
            <summary>
            是否启用分页 1分页
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Page">
            <summary>
            页码 默认 1
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Rows">
            <summary>
            页量 默认 30
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Sort">
            <summary>
            排序列名
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Order">
            <summary>
            排序方式 默认 asc
            </summary>
        </member>
        <member name="P:QueryDataInputVM.SortOrderJoin">
            <summary>
            排序拼接
            </summary>
        </member>
        <member name="P:QueryDataInputVM.ColumnsExists">
            <summary>
            是否查询列信息 1不查询
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pe1">
            <summary>
            拓展参数 
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pe2">
            <summary>
            拓展参数 
            </summary>
        </member>
        <member name="P:QueryDataInputVM.Pe3">
            <summary>
            拓展参数 
            </summary>
        </member>
        <member name="T:QueryDataOutputVM">
            <summary>
            输出信息
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Total">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Table">
            <summary>
            数据，data转换表，忽略序列化
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Columns">
            <summary>
            列标题
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Or1">
            <summary>
            拓展信息 
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Or2">
            <summary>
            拓展信息
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.Or3">
            <summary>
            拓展信息 
            </summary>
        </member>
        <member name="P:QueryDataOutputVM.QuerySql">
            <summary>
            查询SQL
            </summary>
        </member>
        <member name="T:TreeNodeVM">
            <summary>
            Tree JSON 节点
            推荐所有的JSON输出用此实体，保证一致性，即页面接收的JSON全是这种格式，方便维护。
            如果不够用，自己灵活追加。
            </summary>
        </member>
        <member name="P:TreeNodeVM.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:TreeNodeVM.Pid">
            <summary>
            父ID
            </summary>
        </member>
        <member name="P:TreeNodeVM.Text">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:TreeNodeVM.Ext1">
            <summary>
            拓展
            </summary>
        </member>
        <member name="P:TreeNodeVM.Ext2">
            <summary>
            拓展
            </summary>
        </member>
        <member name="P:TreeNodeVM.Ext3">
            <summary>
            拓展
            </summary>
        </member>
        <member name="P:TreeNodeVM.Spare1">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:TreeNodeVM.Spare2">
            <summary>
            备用
            </summary>
        </member>
        <member name="P:TreeNodeVM.Spare3">
            <summary>
            备用
            </summary>
        </member>
        <member name="T:ValueTextVM">
            <summary>
            键值对，下拉列表等
            </summary>
        </member>
        <member name="P:ValueTextVM.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:ValueTextVM.Text">
            <summary>
            文本
            </summary>
        </member>
    </members>
</doc>
