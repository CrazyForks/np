<div class="container-fluid">
    <div class="row" id="tobox">
        <div class="col-sm-6">
            <div class="input-group mb-2">
                <button type="button" class="btn btn-warning" id="btnToXml">JSON → XML</button>
                <div class="input-group-prepend">
                    <select class="custom-select" id="seautoformatter1">
                        <option value="1">自动格式化</option>
                        <option value="2">不格式化</option>
                    </select>
                </div>
            </div>
            <pre id="txt1" class="border overflow-hidden">
{
  "site": {
    "title": "NET牛人",
    "domain": "https://www.netnr.com",
    "foreverdomain": "http://netnr.top",
    "createtime": "2014.01.01",
    "qqgroup": 83084426
  },
  "about": {
    "name": "netnr",
    "sex": "男",
    "birthday": "1992.07.13",
    "injob": "2012.03.01",
    "live": "中国重庆",
    "stain": null,
    "qq": 1041911384,
    "mail": "netnr@netnr.com",
    "git": [
      {
        "name": "github",
        "url": "https://github.com/netnr"
      },
      {
        "name": "gitee",
        "url": "https://gitee.com/netnr"
      }
    ]
  },
  "updaet": "2018.01.08",
  "version": "v.1.0.0"
}</pre>
        </div>
        <div class="col-sm-6">
            <div class="input-group mb-2">
                <button type="button" class="btn btn-warning" id="btnToJson">XML → JSON</button>
                <div class="input-group-prepend">
                    <select class="custom-select" id="seautoformatter2">
                        <option value="1">自动格式化</option>
                        <option value="2">不格式化</option>
                    </select>
                </div>
            </div>

            <div class="border overflow-hidden" id="txt2"></div>
        </div>
    </div>
</div>

<script>
    function AutoHeight() {
        var ch = $(window).height() - $('#txt1').offset().top - 15;
        $('#txt1').css('height', Math.max(200, ch));
        $('#txt2').css('height', Math.max(200, ch));
    }
    AutoHeight();
</script>

@Html.Raw(Netnr.SharedApp.QuoteTo.Html("xml2json.js,monaco-editor"))

<script>
    var editor1, editor2;

    require(['vs/editor/editor.main'], function () {

        var txt1 = document.getElementById('txt1');
        var tv1 = txt1.innerHTML;
        txt1.innerHTML = '';

        editor1 = monaco.editor.create(txt1, {
            value: tv1,
            language: 'json',
            scrollBeyondLastLine: false,
            automaticLayout: true,
            theme: 'vs',
            scrollbar: {
                verticalScrollbarSize: 6,
                horizontalScrollbarSize: 6
            },
            minimap: {
                enabled: false
            }
        });

        editor1.onDidChangeModelContent(function (e) {
            if ($('#seautoformatter1').val() == "1") {
                window.clearTimeout(window.defer1)
                window.defer1 = setTimeout(function () {
                    try {
                        if (window.very1 == 'self') {
                            window.very1 = '';
                        } else {
                            var val = JSON.stringify(JSON.parse(editor1.getValue()), null, 2);
                            window.very1 = 'self';
                            editor1.setValue(val);
                        }
                    } catch (e) { }
                }, 20)
            }
        });

        editor2 = monaco.editor.create($("#txt2")[0], {
            value: '',
            language: 'xml',
            automaticLayout: true,
            scrollBeyondLastLine: false,
            theme: 'vs',
            scrollbar: {
                verticalScrollbarSize: 6,
                horizontalScrollbarSize: 6
            },
            minimap: {
                enabled: false
            }
        });

        editor2.onDidChangeModelContent(function (e) {
            if ($('#seautoformatter2').val() == "1") {
                window.clearTimeout(window.defer2)
                window.defer2 = setTimeout(function () {
                    try {
                        if (window.very2 == 'self') {
                            window.very2 = '';
                        } else {
                            var val = formatXml(editor2.getValue());
                            window.very2 = 'self';
                            editor2.setValue(val);
                        }
                    } catch (e) { }
                }, 20);
            }
        });
    });

    $(window).resize(AutoHeight);

    $("#btnToJson").click(function (e) {
        var x2js = new X2JS({
            attributePrefix: "@@"
        });
        var xmlText = editor2.getValue();
        if (xmlText == "") {
            jz.msg('XML 不能为空');
            return false;
        }
        var jsonObj = x2js.xml_str2json(xmlText);
        if (jsonObj == null && $(xmlText).length) {
            xmlText = '<root>' + xmlText + '</root>';
            jsonObj = x2js.xml_str2json(xmlText)["root"];
        }
        if (jsonObj == null) {
            jz.msg('转换错误');
            return false;
        }

        editor1.setValue(JSON.stringify(jsonObj));
    });

    $("#btnToXml").click(function () {
        var x2js = new X2JS({
            attributePrefix: "@@"
        });
        var jsonText = editor1.getValue();
        if (jsonText == "") {
            jz.msg('JSON 不能为空');
            return false;
        }
        var jsonObj = $.parseJSON(jsonText);
        var xmlAsStr = x2js.json2xml_str(jsonObj);

        editor2.setValue(xmlAsStr);
    });

    function formatXml(xml) {
        var formatted = '';
        var reg = /(>)(<)(\/*)/g;
        xml = xml.replace(reg, '$1\r\n$2$3');
        var pad = 0;
        jQuery.each(xml.split('\r\n'), function (index, node) {
            var indent = 0;
            if (node.match(/.+<\/\w[^>]*>$/)) {
                indent = 0;
            } else if (node.match(/^<\/\w/)) {
                if (pad != 0) {
                    pad -= 1;
                }
            } else if (node.match(/^<\w[^>]*[^\/]>.*$/)) {
                indent = 1;
            } else {
                indent = 0;
            }

            var padding = '';
            for (var i = 0; i < pad; i++) {
                padding += '  ';
            }

            formatted += padding + node + '\r\n';
            pad += indent;
        });

        return formatted;
    }
</script>