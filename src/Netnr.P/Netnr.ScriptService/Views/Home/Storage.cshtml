<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 nrBS">
            <h4>功能还在开发中 ...</h4>
        </div>
    </div>
</div>

<script>


    var bs = {
        config: {
            //分块大小
            chunkSize: 1024 * 1024 * 4
        },
        init: function () {

            //$('.nrFile').change(function () {
            //    var file = this.files[0];
            //    if (file) {
            //        var blob1 = $('.nrFile1')[0].files[0];
            //        var blob2 = file;

            //        console.log(blob1);

            //        let merge = new Blob([blob1, blob2], { type: "image/png" });
            //        console.log(merge);

            //        var img = new Image();
            //        img.src = URL.createObjectURL(merge);
            //        document.body.appendChild(img);
            //    }
            //})

            //$('.nrFile3').change(function () {
            //    var file = this.files[0];
            //    if (file) {
            //        var blob = file.slice(83);

            //        let merge = new Blob([blob], { type: "video/mp4" });
            //        console.log(merge)

            //        var vnode = document.createElement("video");
            //        vnode.controls = true;
            //        vnode.src = URL.createObjectURL(merge);
            //        document.body.appendChild(vnode);
            //    }
            //})

            bs.urlToBlob("https://p1.itc.cn/images03/20201123/872be7e9af0c4be68c743069aeabe834.png").then(blob => {
                blob = blob.slice(83, blob.size, "video/mp4");

                var vnode = document.createElement("video");
                vnode.controls = true;
                vnode.style.maxHeight = "600px";
                vnode.src = URL.createObjectURL(blob);
                $('.nrBS').append(vnode);
            })
        },

        //存储商
        storage: [
            { key: "jd", name: "京东" }
        ],

        //请求链接得到Blob对象
        urlToBlob: function (url) {
            return new Promise(function (resolve, reject) {
                var http = new XMLHttpRequest();
                http.open("GET", url, true);
                http.responseType = "blob";
                http.onload = function (e) {
                    if (this.status == 200 || this.status === 0) {
                        resolve(this.response);
                    } else {
                        reject(this);
                    }
                };
                http.send();
            });
        },

        //分片
        splitFile: function (file) {
            var chunks = [], start = 0, fileSize = file.size;
            while (start < fileSize) {
                var slen = start + bs.con.chunkSize;
                var chunk = file.slice(start, Math.min(slen, fileSize));
                start += bs.con.chunkSize;
                chunks.push(chunk);
            }
            return chunks;
        }

    }
    bs.init();
</script>