<style>
    .difftxt {
        width: auto;
        padding: 6px;
        height: 38px !important;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="input-group">
                <div class="input-group-prepend">
                    <select class="custom-select nr-diff-inline">
                        <optgroup label="对比模式">
                            <option value="0">左右</option>
                            <option value="1">内联</option>
                        </optgroup>
                    </select>
                </div>
                <div class="custom-file">
                    <input id="txtFile" type="file" class="custom-file-input">
                    <label class="custom-file-label nrtip" dv="选择（拖拽）文件">选择（拖拽）文件</label>
                </div>
                <div class="input-group-prepend">
                    <button class="btn btn-secondary nr-diff-next">Next</button>
                </div>
            </div>
        </div>
        <div class="col-md-12 mt-3">
            <div id="editor" class="border overflow-hidden position-relative">
                <i class="fa fa-arrows-alt fa-fw me-full-btn" title="Switch the full screen"></i>
            </div>
        </div>
    </div>
</div>

@Html.Raw(Netnr.SharedApp.QuoteTo.Html("monaco-editor"))

<script>
    var de = {
        editor: document.getElementById("editor"),
        init: function () {

            de.resize();
            $(window).on('resize', de.resize);

            require(['vs/editor/editor.main'], function () {
                de.originalModel = monaco.editor.createModel("just some text\n\nHello World\n\nSome more text", "text/plain");
                de.modifiedModel = monaco.editor.createModel("just some Text\n\nHello World\n\nSome more changes", "text/plain");

                de.diffEditor = monaco.editor.createDiffEditor(de.editor, ss.meConfig({
                    originalEditable: true
                }));

                de.diffEditor.setModel({
                    original: de.originalModel,
                    modified: de.modifiedModel
                });

                de.den = monaco.editor.createDiffNavigator(de.diffEditor, {
                    followsCaret: true,
                    ignoreCharChanges: true
                });

                $('.nr-diff-inline').change(function () {
                    de.diffEditor.updateOptions({
                        renderSideBySide: this.value != 1
                    });
                });

                $('.nr-diff-next').click(function () {
                    de.den.next();
                });
            });
        },
        resize: function () {
            var ch = $(window).height() - $('#editor').offset().top - 20;
            $('#editor').height(Math.max(200, ch));
        }
    }

    de.init();

    //接收文件
    ss.receiveFiles(function (files) {
        jz.popup({
            title: "请选择文件打开到？",
            okValue: "Right 右边",
            cancelValue: "Left 左边",
            drag: true,
            //变动（右）
            ok: function () {
                var file = files[0];
                var reader = new FileReader();
                reader.onload = function (e) {
                    de.diffEditor.getModifiedEditor().setValue(e.target.result);
                    $("#txtFile").val('');
                };
                reader.readAsText(file);
            },
            //原始（左）
            cancel: function () {
                var file = files[0];
                var reader = new FileReader();
                reader.onload = function (e) {
                    de.diffEditor.getOriginalEditor().setValue(e.target.result);
                    $("#txtFile").val('');
                };
                reader.readAsText(file);
            },
            close: function () {
                $("#txtFile").val('');
            }
        })
    }, "#txtFile");
</script>