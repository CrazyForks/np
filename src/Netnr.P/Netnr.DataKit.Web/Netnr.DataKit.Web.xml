<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Netnr.DataKit.Web</name>
    </assembly>
    <members>
        <member name="T:Netnr.DataKit.Web.Apps.FilterConfigs">
            <summary>
            过滤器
            </summary>
        </member>
        <member name="T:Netnr.DataKit.Web.Apps.FilterConfigs.AllowCors">
            <summary>
            允许跨域
            </summary>
        </member>
        <member name="T:Netnr.DataKit.Web.Controllers.DKController">
            <summary>
            Netnr.DataKit API
            </summary>
        </member>
        <member name="M:Netnr.DataKit.Web.Controllers.HomeController.SwaggerCustomStyle">
            <summary>
            Swagger自定义样式
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKitScript">
            <summary>
            数据交互脚本
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitScript.GetDatabaseName(Netnr.SharedEnum.TypeDB)">
            <summary>
            获取库名
            </summary>
            <param name="tdb"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitScript.GetDatabase(Netnr.SharedEnum.TypeDB,System.Collections.Generic.IList{System.String})">
            <summary>
            获取库
            </summary>
            <param name="tdb"></param>
            <param name="listDatabaseName"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitScript.GetTable(Netnr.SharedEnum.TypeDB,System.String,System.String)">
            <summary>
            获取表
            </summary>
            <param name="tdb"></param>
            <param name="databaseName">数据库名</param>
            <param name="schemaName">模式名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitScript.GetTableDDL(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String)">
            <summary>
            表DLL
            </summary>
            <param name="tdb"></param>
            <param name="databaseName"></param>
            <param name="schemaName"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitScript.GetColumn(Netnr.SharedEnum.TypeDB,System.String,System.Collections.Generic.List{System.Tuple{System.String,System.String}})">
            <summary>
            获取列
            </summary>
            <param name="tdb"></param>
            <param name="databaseName">数据库名</param>
            <param name="listSchemaNameTableName">过滤 模式名、表名集合</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitScript.SetTableComment(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="tdb"></param>
            <param name="databaseName">数据库名</param>
            <param name="tableSchema">模式</param>
            <param name="tableName">表名</param>
            <param name="tableComment">表注释</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKitScript.SetColumnComment(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="tdb"></param>
            <param name="databaseName">数据库名</param>
            <param name="tableSchema">模式</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
            <param name="columnComment">列注释</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.DataKit">
            <summary>
            数据交互基础方法
            </summary>
            <summary>
            DataKit 拓展
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKit.db">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="F:Netnr.SharedDataKit.DataKit.tdb">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.#ctor(Netnr.SharedEnum.TypeDB,System.Data.Common.DbConnection)">
            <summary>
            构造
            </summary>
            <param name="typeDB">类型</param>
            <param name="dbConnection">连接</param>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.DefaultDatabaseName">
            <summary>
            默认库名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.GetDatabaseName">
            <summary>
            获取库名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.GetDatabase(System.String)">
            <summary>
            获取库
            </summary>
            <param name="filterDatabaseName">过滤数据库名，逗号分隔</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.GetTable(System.String,System.String)">
            <summary>
            获取表
            </summary>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.GetTableDDL(System.String,System.String,System.String)">
            <summary>
            表DDL
            </summary>
            <param name="tableName">表名</param>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.GetColumn(System.String,System.String)">
            <summary>
            获取列
            </summary>
            <param name="filterSchemaNameTableName">过滤模式表名，逗号分隔</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.SetTableComment(System.String,System.String,System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="tableName">表名</param>
            <param name="tableComment">表注释</param>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.SetColumnComment(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
            <param name="columnComment">列注释</param>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.ExecuteSql(System.String)">
            <summary>
            执行脚本
            </summary>
            <param name="sql">脚本</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.Init(Netnr.SharedEnum.TypeDB,System.String,System.String)">
            <summary>
            初始化
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
            <param name="databaseName"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.Init(Netnr.SharedDataKit.TransferVM.ConnectionInfo)">
            <summary>
            初始化
            </summary>
            <param name="connectionInfo">连接信息</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.DbConn(Netnr.SharedEnum.TypeDB,System.String)">
            <summary>
            数据库连接
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.SetConnDatabase(Netnr.SharedEnum.TypeDB,System.String,System.String)">
            <summary>
            设置连接的数据库名（MySQL、SQLServer、PostgreSQL）
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
            <param name="databaseName"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.ExportDatabase(Netnr.SharedDataKit.TransferVM.ExportDatabase,System.Action{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
            <summary>
            导出数据库
            </summary>
            <param name="edb"></param>
            <param name="le">日志事件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.ExportDataTable(Netnr.SharedDataKit.TransferVM.ExportDataTable,System.Action{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
            <summary>
            导出表
            </summary>
            <param name="edt"></param>
            <param name="le">日志事件</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.MigrateDataTable(Netnr.SharedDataKit.TransferVM.MigrateDataTable,System.Action{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
            <summary>
            迁移数据表
            </summary>
            <param name="mdt"></param>
            <param name="le">实时日志</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedDataKit.DataKit.ImportDatabase(Netnr.SharedDataKit.TransferVM.ImportDatabase,System.Action{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
            <summary>
            导入数据
            </summary>
            <param name="idb"></param>
            <param name="le">日志事件</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM">
            <summary>
            传递参数
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.ConnectionInfo">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ConnectionInfo.ConnectionType">
            <summary>
            连接类型
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ConnectionInfo.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ConnectionInfo.ConnectionRemark">
            <summary>
            连接备注
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ConnectionInfo.DatabaseName">
            <summary>
            数据库名（未设置时获取默认数据库名）
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.TransferVM.ConnectionInfo.NewDbHelper">
            <summary>
            新实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.ReadWriteItem">
            <summary>
            读写项
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ReadWriteItem.ReadDataSQL">
            <summary>
            读取表数据SQL（可带模式名 SchemaName）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ReadWriteItem.ReadTableName">
            <summary>
            读取表名（可带模式名 SchemaName，用于生成列映射）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ReadWriteItem.WriteTableName">
            <summary>
            写入表名（可带模式名 SchemaName）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ReadWriteItem.WriteDeleteSQL">
            <summary>
            清空写入表SQL（可带模式名 SchemaName）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ReadWriteItem.ReadWriteColumnMap">
            <summary>
            读取列 映射 写入列
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.MigrateBase">
            <summary>
            迁移
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateBase.ReadConnectionInfo">
            <summary>
            读取连接信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateBase.RefReadConnectionInfo">
            <summary>
            读取连接信息（引用）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateBase.ReadDatabaseName">
            <summary>
            读取数据库名（读取配置，还需回填 WriteConnectionInfo）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateBase.WriteConnectionInfo">
            <summary>
            写入连接信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateBase.RefWriteConnectionInfo">
            <summary>
            写入连接信息（引用）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateBase.WriteDatabaseName">
            <summary>
            写入数据库名（读取配置，还需回填 WriteConnectionInfo）
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.MigrateDataTable">
            <summary>
            迁移数据表
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateDataTable.ListReadWrite">
            <summary>
            读写表集合
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.MigrateDatabase">
            <summary>
            迁移数据库
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.MigrateDatabase.WriteDeleteData">
            <summary>
            写入前删除表数据
            </summary>
        </member>
        <member name="M:Netnr.SharedDataKit.TransferVM.MigrateDatabase.AsMigrateDataTable">
            <summary>
            转换为
            </summary>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.ExportBase">
            <summary>
            导出
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ExportBase.ReadConnectionInfo">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ExportBase.RefReadConnectionInfo">
            <summary>
            读取连接信息（引用）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ExportBase.ReadDatabaseName">
            <summary>
            读取数据库名（读取配置，还需回填 WriteConnectionInfo）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ExportBase.ListReadSchemaName">
            <summary>
            读取模式名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ExportBase.ZipPath">
            <summary>
            导出 ZIP 包完整路径
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.ExportDataTable">
            <summary>
            导出表
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ExportDataTable.ListReadDataSQL">
            <summary>
            读取数据表（可带模式名 SchemaName）
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.ExportDatabase">
            <summary>
            导出库
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ExportDatabase.ListReadTableName">
            <summary>
            读取表名（可带模式名 SchemaName）
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TransferVM.ImportDatabase">
            <summary>
            导入数据库
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ImportDatabase.WriteConnectionInfo">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ImportDatabase.RefWriteConnectionInfo">
            <summary>
            写入连接信息（引用）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ImportDatabase.WriteDatabaseName">
            <summary>
            写入数据库名（读取配置，还需回填 WriteConnectionInfo）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ImportDatabase.ZipPath">
            <summary>
            导入 ZIP 包完整路径
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ImportDatabase.WriteDeleteData">
            <summary>
            写入前删除表数据
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TransferVM.ImportDatabase.ReadWriteTableMap">
            <summary>
            读取表 映射 写入表（可带模式名 SchemaName）
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.DatabaseVM">
            <summary>
            数据库信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseName">
            <summary>
            库名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseOwner">
            <summary>
            所属者
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseSpace">
            <summary>
            表空间
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseCharset">
            <summary>
            字符集
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseCollation">
            <summary>
            排序规则
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabasePath">
            <summary>
            数据路径
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseLogPath">
            <summary>
            日志路径
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseDataLength">
            <summary>
            数据大小
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseLogLength">
            <summary>
            日志大小
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseIndexLength">
            <summary>
            索引大小
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.DatabaseVM.DatabaseCreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.ColumnVM">
            <summary>
            表列信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.SchemaName">
            <summary>
            模式名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.TableComment">
            <summary>
            表注释
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.ColumnName">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.ColumnType">
            <summary>
            数据类型及长度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.DataLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.DataScale">
            <summary>
            数据精度
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.ColumnOrder">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.PrimaryKey">
            <summary>
            主键（大于等于1）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.AutoIncr">
            <summary>
            自增（1：是）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.IsNullable">
            <summary>
            可为空（1：空；0：非空）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.ColumnDefault">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.ColumnVM.ColumnComment">
            <summary>
            列注释
            </summary>
        </member>
        <member name="T:Netnr.SharedDataKit.TableVM">
            <summary>
            表信息
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.SchemaName">
            <summary>
            模式名
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableOwner">
            <summary>
            所属
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableSpace">
            <summary>
            空间
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableType">
            <summary>
            表类型（表、视图）
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableEngine">
            <summary>
            引擎
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableRows">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableDataLength">
            <summary>
            数据大小
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableIndexLength">
            <summary>
            索引大小
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableCreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableCollation">
            <summary>
            排序规则
            </summary>
        </member>
        <member name="P:Netnr.SharedDataKit.TableVM.TableComment">
            <summary>
            表注释
            </summary>
        </member>
        <member name="T:Netnr.SharedTimingVM">
            <summary>
            计时
            </summary>
        </member>
        <member name="M:Netnr.SharedTimingVM.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Netnr.SharedTimingVM.PartTime">
            <summary>
            片段耗时，毫秒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedTimingVM.PartTimeFormat(System.String)">
            <summary>
            片段耗时，毫秒，可视化
            </summary>
            <param name="format">格式化</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedTimingVM.TotalTime">
            <summary>
            总耗时，毫秒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedTimingVM.TotalTimeFormat(System.String)">
            <summary>
            总耗时，毫秒，可视化
            </summary>
            <param name="format">格式化</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedAdo.DbHelper">
            <summary>
            Db帮助类
            </summary>
            <summary>
            Db帮助类
            </summary>
            <summary>
            SQLite操作类
            </summary>
            <summary>
            Oracle操作类
            </summary>
            <summary>
            MySQL操作类
            </summary>
            <summary>
            PostgreSQL操作类
            </summary>
            <summary>
            SQLServer操作类
            </summary>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.GetTypeDB(System.String)">
            <summary>
            类型转换
            </summary>
            <param name="typeDB"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlQuote(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            SQL引用符号，支持点分隔
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="KeyWord">关键字</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlSNTN(System.String,System.String,System.Nullable{Netnr.SharedEnum.TypeDB})">
            <summary>
            模式及表名
            </summary>
            <param name="tableName">表名</param>
            <param name="schemaName">模式，可选</param>
            <param name="tdb">类型</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlEqualSNTN(System.String,System.String,System.String)">
            <summary>
            判断 是否相等
            </summary>
            <param name="sntn"></param>
            <param name="tableName"></param>
            <param name="schemaName"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlEmpty(System.String,System.Nullable{Netnr.SharedEnum.TypeDB})">
            <summary>
            构建查询空表脚本
            </summary>
            <param name="table">数据库表名</param>
            <param name="tdb">数据库类型，取引用符号</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlClearTable(Netnr.SharedEnum.TypeDB,System.String)">
            <summary>
            构建清空表数据脚本
            </summary>
            <param name="tdb"></param>
            <param name="sntn">模式名.表名</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlConnPreCheck(System.Nullable{Netnr.SharedEnum.TypeDB},System.String)">
            <summary>
            SQL连接字符串预检
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="connectionString">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlConnEncryptOrDecrypt(System.String,System.String,System.Boolean)">
            <summary>
            SQL连接字符串加密/解密
            </summary>
            <param name="conn">连接字符串</param>
            <param name="pwd">密码</param>
            <param name="isDecrypt">是解密，加密 false</param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlConnFromHeroku(System.String)">
            <summary>
            解析 Heroku 环境变量的连接字符串
            遵循规则：postgres://{username}:{password}@{host}:{port}/{dbname}
            </summary>
            <param name="ev"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlParserBeginEnd(System.String)">
            <summary>
            解析 begin ... end;
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlParserCursors(System.String)">
            <summary>
            解析 open:name for
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.ReaderTableSchema(System.Data.Common.DbDataReader)">
            <summary>
            获取空表结构、元信息
            </summary>
            <param name="reader"></param>
            <returns>NULL 或 {Table, Schema}</returns>
        </member>
        <member name="P:Netnr.SharedAdo.DbHelper.Connection">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="P:Netnr.SharedAdo.DbHelper.Transaction">
            <summary>
            事务
            </summary>
        </member>
        <member name="P:Netnr.SharedAdo.DbHelper.DicCommand">
            <summary>
            记录
            </summary>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.#ctor(System.Data.Common.DbConnection)">
            <summary>
            构造
            </summary>
            <param name="dbConnection">连接对象</param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecuteReader(System.String,System.Data.Common.DbParameter[],System.Func{System.Data.Common.DbCommand,System.Data.Common.DbCommand},System.Boolean)">
            <summary>
            执行（查询、新增、修改、删除等）
            </summary>
            <param name="sql">SQL语句，支持多条</param>
            <param name="parameters">带参</param>
            <param name="func">回调</param>
            <param name="openTransaction">开启事务，默认</param>
            <returns>返回 表数据、受影响行数、表结构</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecuteDataRow(System.String,System.Action{System.Data.DataRow})">
            <summary>
            查询 读取行
            </summary>
            <param name="sql"></param>
            <param name="readRow"></param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecuteScalar(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行 返回首行首列
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecuteNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行 返回受影响行数
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SqlExecuteNonQuery(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            执行（批量、事务）
            </summary>
            <param name="listSql">SQL语句</param>
            <param name="sqlBatchSize">脚本分批大小，单位：字节（byte），默认：1024 * 100 = 100KB</param>
            <returns>返回受影响行数</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.GetCommand(System.String,System.Data.Common.DbParameter[],System.Int32,System.Data.CommandType)">
            <summary>
            拿到 DbCommand
            </summary>
            <param name="sql">SQL语句</param>
            <param name="parameters">带参</param>
            <param name="timeout">超时，默认 300 秒</param>
            <param name="commandType">类型</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SafeConn(System.Action)">
            <summary>
            连接包装
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.SafeConn``1(System.Func{``0})">
            <summary>
            连接包装
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchSQLite(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表</param>
            <param name="sqlEmpty">查询空表脚本，默认*，可选列，会影响数据更新的列</param>
            <param name="openTransaction">开启事务</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopyOracle(System.Data.DataTable,System.Action{Oracle.ManagedDataAccess.Client.OracleBulkCopy})">
            <summary>
            表批量写入
            </summary>
            <param name="dt">数据表</param>
            <param name="bulkCopy">设置表复制对象</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchOracle(System.Data.DataTable,System.String,System.Action{Oracle.ManagedDataAccess.Client.OracleDataAdapter},System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表</param>
            <param name="sqlEmpty">查询空表脚本，默认*，可选列，会影响数据更新的列</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopyMySQL(System.Data.DataTable,System.Action{MySqlConnector.MySqlBulkCopy},System.Boolean)">
            <summary>
            表批量写入
            </summary>
            <param name="dt">数据表</param>
            <param name="bulkCopy">设置表复制对象</param>
            <param name="openTransaction">开启事务，默认不开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchMySQL(System.Data.DataTable,System.String,System.Action{MySqlConnector.MySqlDataAdapter},System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表</param>
            <param name="sqlEmpty">查询空表脚本，默认*，可选列，会影响数据更新的列</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopyPostgreSQL(System.Data.DataTable)">
            <summary>
            表批量写入（排除自增列）
            https://www.npgsql.org/doc/copy.html
            </summary>
            <param name="dt">数据表（Namespace=SchemaName，TableName=TableName）</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchPostgreSQL(System.Data.DataTable,System.String,System.Action{Npgsql.NpgsqlDataAdapter},System.Boolean)">
            <summary>
            表批量写入（须手动处理自增列SQL）
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表（Namespace=SchemaName，TableName=TableName）</param>
            <param name="sqlEmpty">查询空表脚本，默认*，可选列，会影响数据更新的列</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkKeepIdentityPostgreSQL(System.Data.DataTable)">
            <summary>
            表批量写入（保留自增值）
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkCopySQLServer(System.Data.DataTable,System.Action{Microsoft.Data.SqlClient.SqlBulkCopy})">
            <summary>
            表批量写入
            </summary>
            <param name="dt">数据表（Namespace=SchemaName，TableName=TableName）</param>
            <param name="bulkCopy">设置表复制对象</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelper.BulkBatchSQLServer(System.Data.DataTable,System.String,System.Action{Microsoft.Data.SqlClient.SqlDataAdapter},System.Boolean)">
            <summary>
            表批量写入
            根据行数据 RowState 状态新增、修改
            </summary>
            <param name="dt">数据表（Namespace=SchemaName，TableName=TableName）</param>
            <param name="sqlEmpty">查询空表脚本，默认*，可选列，会影响数据更新的列</param>
            <param name="dataAdapter">执行前修改（命令行脚本、超时等信息）</param>
            <param name="openTransaction">开启事务，默认开启</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedAdo.DbHelperExtend">
            <summary>
            扩展
            </summary>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelperExtend.ExecuteDataSet(System.Data.Common.DbCommand,System.Boolean)">
            <summary>
            查询返回数据集
            </summary>
            <param name="dbCommand"></param>
            <param name="tableLoad">默认使用 Load 模式，False 则逐行读取（针对Load模式出错时用）</param>
            <returns>表数据、受影响行数、表结构</returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelperExtend.ExecuteDataOnly(System.Data.Common.DbCommand,System.Boolean)">
            <summary>
            查询返回数据集
            </summary>
            <param name="dbCommand"></param>
            <param name="tableLoad">默认使用 Load 模式，False 则逐行读取（针对Load模式出错时用）</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelperExtend.ExecuteDataRow(System.Data.Common.DbCommand,System.Action{System.Data.DataRow})">
            <summary>
            查询读取数据行
            </summary>
            <param name="dbCommand"></param>
            <param name="readRow">读取行，dt.Namespace = SchemaName，dt.TableName = TableName</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedAdo.DbHelperExtend.ToFix(System.Data.Common.DbCommand)">
            <summary>
            修复：避免内存泄露
            ref: https://stackoverflow.com/questions/3699143
            ref: https://support.oracle.com/knowledge/Oracle%20Database%20Products/1050515_1.html
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:Netnr.SharedFast.GlobalTo">
            <summary>
            全局
            </summary>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.TDB">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetConn">
            <summary>
            根据数据库类型获取连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.Configuration">
            <summary>
            全局配置
            </summary>
        </member>
        <member name="F:Netnr.SharedFast.GlobalTo.HostEnvironment">
            <summary>
            托管环境信息
            </summary>
        </member>
        <member name="P:Netnr.SharedFast.GlobalTo.ContentRootPath">
            <summary>
            内部访问（项目根路径）
            </summary>
        </member>
        <member name="P:Netnr.SharedFast.GlobalTo.WebRootPath">
            <summary>
            web外部访问（wwwroot）
            </summary>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetValue(System.String)">
            <summary>
            获取AppsettingsJson的值
            </summary>
            <param name="key">键路径，如：ConnectionStrings:SQLServer</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.GetValue``1(System.String)">
            <summary>
            获取AppsettingsJson的值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键路径</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.ConvertValue``1(System.String)">
            <summary>
            值类型转换
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedFast.GlobalTo.ConvertValue(System.Type,System.String)">
            <summary>
            值类型转换
            </summary>
            <param name="type">类型</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedPageVM">
            <summary>
            分页视图
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Rows">
            <summary>
            数据行
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Temp">
            <summary>
            临时数据
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Other">
            <summary>
            其它数据
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.Pag">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="F:Netnr.SharedPageVM.Route">
            <summary>
            路由 /home/index
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.QueryString">
            <summary>
            url 传参 k=1
            </summary>
        </member>
        <member name="P:Netnr.SharedPageVM.PageKeyName">
            <summary>
            分页 参数名 默认 page
            </summary>
        </member>
        <member name="M:Netnr.SharedPageVM.Page(System.Int32)">
            <summary>
            生成页的地址
            </summary>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedPaginationVM">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageSize">
            <summary>
            页量
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.Total">
            <summary>
            总数量
            </summary>
        </member>
        <member name="P:Netnr.SharedPaginationVM.PageTotal">
            <summary>
            总页数
            </summary>
        </member>
        <member name="T:Netnr.SharedResultVM">
            <summary>
            通用请求方法返回对象
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Code">
            <summary>
            错误码，200 表示成功，-1 表示异常，其它自定义建议从 1 开始累加
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Data">
            <summary>
            主体数据
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.LogEvent(System.Action{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
            <summary>
            日志事件
            </summary>
            <param name="le"></param>
        </member>
        <member name="P:Netnr.SharedResultVM.UseTime">
            <summary>
            用时，毫秒
            </summary>
        </member>
        <member name="P:Netnr.SharedResultVM.UseTimeFormat">
            <summary>
            用时，可视化
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.TotalTimeFormat">
            <summary>
            总耗时，可视化
            </summary>
        </member>
        <member name="M:Netnr.SharedResultVM.PartTime">
            <summary>
            片段耗时，毫秒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedResultVM.PartTimeFormat(System.String)">
            <summary>
            片段耗时，毫秒，可视化
            </summary>
            <param name="format">格式化</param>
            <returns></returns>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(Netnr.SharedEnum.RTag)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="tag">快捷标签枚举</param>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="isyes"></param>
        </member>
        <member name="M:Netnr.SharedResultVM.Set(System.Exception,System.Boolean)">
            <summary>
            设置快捷标签，赋值code、msg
            </summary>
            <param name="ex"></param>
            <param name="showException">显示异常信息，默认true</param>
        </member>
        <member name="M:Netnr.SharedResultVM.Try(System.Func{Netnr.SharedResultVM,Netnr.SharedResultVM})">
            <summary>
            通用的异常处理
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Netnr.SharedEnum">
            <summary>
            共享枚举
            </summary>
        </member>
        <member name="T:Netnr.SharedEnum.TypeDB">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.InMemory">
            <summary>
            Memory
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.SQLite">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.MySQL">
            <summary>
            MySQL
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.MariaDB">
            <summary>
            MariaDB
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.SQLServer">
            <summary>
            SQLServer
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.TypeDB.PostgreSQL">
            <summary>
            PostgreSQL
            </summary>
        </member>
        <member name="T:Netnr.SharedEnum.RTag">
            <summary>
            返回结果常用类型
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.fail">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.unauthorized">
            <summary>
            未授权
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.refuse">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.exist">
            <summary>
            存在
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.lack">
            <summary>
            缺省
            </summary>
        </member>
        <member name="F:Netnr.SharedEnum.RTag.exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="M:Netnr.SharedReady.ReadyTo.EncodingReg">
            <summary>
            编码注册
            </summary>
        </member>
        <member name="M:Netnr.SharedReady.ReadyTo.LegacyTimestamp">
            <summary>
            启用旧时间戳行为
            </summary>
        </member>
        <member name="T:DataKitController">
            <summary>
            Netnr.DataKit API
            </summary>
        </member>
        <member name="M:DataKitController.Entry(Netnr.SharedEnum.TypeDB,System.String,System.String,System.Func{Netnr.SharedDataKit.DataKit,System.Object})">
            <summary>
            入口
            </summary>
            <param name="tdb"></param>
            <param name="conn"></param>
            <param name="databaseName"></param>
            <param name="dkCall"></param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.GetDatabaseName(Netnr.SharedEnum.TypeDB,System.String)">
            <summary>
            获取库名
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.GetDatabase(Netnr.SharedEnum.TypeDB,System.String,System.String)">
            <summary>
            获取库
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <param name="filterDatabaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.GetTable(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String)">
            <summary>
            获取表
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.GetTableDDL(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String,System.String)">
            <summary>
            表DDL
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <param name="tableName">表名</param>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.GetColumn(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String)">
            <summary>
            获取列
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <param name="filterSchemaNameTableName">过滤模式表名，逗号分隔</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.SetTableComment(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            设置表注释
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <param name="tableName">表名</param>
            <param name="tableComment">表注释</param>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.SetColumnComment(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            设置列注释
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
            <param name="columnComment">列注释</param>
            <param name="schemaName">模式名</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:DataKitController.ExecuteSql(Netnr.SharedEnum.TypeDB,System.String,System.String,System.String)">
            <summary>
            执行脚本
            </summary>
            <param name="tdb">数据库类型</param>
            <param name="conn">连接字符串</param>
            <param name="sql">脚本</param>
            <param name="databaseName">数据库名</param>
            <returns></returns>
        </member>
    </members>
</doc>
